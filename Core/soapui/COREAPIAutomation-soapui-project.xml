<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="COREAPIAutomation" soapui-version="4.6.0" resourceRoot="${projectDir}" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.ProTestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="createClientAPITestSuite"/>
  <con:entry key="Password" value=""/>
  <con:entry key="soapui-setings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value="C:\Program Files\SmartBear\soapUI-Pro-4.6.0\bin"/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="true"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="false"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value="APIName=createClient 
TestDataFile=C:\\Users\\richa\\Desktop\\automationFinal\\DataFiles\\createClient\\createClient.xls"/>
  <con:entry key="Export All" value="false"/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="createClientAPITestCase"/>
  <con:entry key="Print Report" value="false"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value=""/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Endpoint" value=""/>
  <con:entry key="Select Report Type" value="TestSuite Report"/>
</xml-fragment>]]></con:setting></con:settings><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="BBXServiceSoapBinding" type="wsdl" bindingName="{schema.bancbox.com}BBXServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="https://qa-api.bancbox.com:9090/v3/BBXPort?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://qa-api.bancbox.com:9090/v3/BBXPort?wsdl"><con:part><con:url>https://qa-api.bancbox.com:9090/v3/BBXPort?wsdl</con:url><con:content><![CDATA[<wsdl:definitions jaxb:version="2.0" name="BBXService" targetNamespace="schema.bancbox.com" xmlns:jaxb="http://java.sun.com/xml/ns/jaxb" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="schema.bancbox.com" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <xs:schema targetNamespace="schema.bancbox.com" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:complexType name="collectFundsRequest">
        <xs:sequence>
          <xs:element name="subscriberId" type="xs:long"/>
          <xs:element minOccurs="0" name="sessionId" type="xs:string"/>
          <xs:element minOccurs="0" name="merchantId" type="xs:string"/>
          <xs:element name="method">
            <xs:complexType>
              <xs:sequence>
                <xs:choice minOccurs="1">
                  <xs:element name="book" type="tns:book"/>
                  <xs:element name="ach" type="tns:ach"/>
                  <xs:element name="creditcard" type="tns:creditcard"/>
                </xs:choice>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="source">
            <xs:complexType>
              <xs:sequence>
                <xs:choice minOccurs="1">
                  <xs:element name="account" type="tns:id"/>
                  <xs:element name="linkedExternalAccountId" type="tns:id"/>
                  <xs:element name="newExternalAccount" type="tns:collectExternalAccount"/>
                </xs:choice>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <!--<xs:element name="destinationAccount" type="tns:id" />-->
          <xs:element name="destinationAccount">
            <xs:complexType>
              <xs:sequence>
                <xs:choice minOccurs="1">
                  <xs:element name="account" type="tns:id"/>
                  <xs:element name="subscriberNamedAccount" type="tns:subscriberNamedAccount"/>
                </xs:choice>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element maxOccurs="unbounded" name="items" type="tns:collectFundsItem"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="book">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="ach">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="creditcard">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="paypal">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="id">
        <xs:sequence>
          <xs:element minOccurs="0" name="bancBoxId" type="xs:long"/>
          <xs:element minOccurs="0" name="subscriberReferenceId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="subscriberNamedAccount">
        <xs:restriction base="xs:string">
          <xs:enumeration value="SUB_RESERVE"/>
        </xs:restriction>
      </xs:simpleType>
      <!--<xs:complexType name="subscriberNamedAccount"> <xs:sequence> <xs:element 
				name="accountName" type="xs:string" /> </xs:sequence> </xs:complexType>-->
      <xs:complexType name="collectExternalAccount">
        <xs:sequence>
          <xs:element name="account">
            <xs:complexType>
              <xs:sequence>
                <xs:choice minOccurs="1">
                  <xs:element name="bankAccount" type="tns:bankAccount"/>
                  <xs:element name="creditCardAccount" type="tns:creditCardData"/>
                </xs:choice>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="bankAccountUpdatable">
        <xs:sequence>
          <xs:element name="routingNumber" type="xs:string"/>
          <xs:element name="accountNumber" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="bankAccount">
        <xs:sequence>
          <xs:element name="routingNumber" type="xs:string"/>
          <xs:element name="accountNumber" type="xs:string"/>
          <xs:element name="holderName" type="xs:string"/>
          <xs:element name="bankAccountType" type="tns:bankAccountType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="creditCardData">
        <xs:sequence>
          <xs:choice minOccurs="1">
            <xs:element name="cardPresent" type="tns:cardPresent"/>
            <xs:element name="cardNotPresent" type="tns:cardNotPresent"/>
          </xs:choice>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="cardPresent">
        <xs:sequence>
          <xs:element name="trackdata" type="xs:string"/>
          <xs:element minOccurs="0" name="pos" type="tns:posDetails"/>
          <xs:element minOccurs="0" name="orderSource" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="posDetails">
        <xs:sequence>
          <xs:element minOccurs="0" name="capability" type="tns:capabilityDetails"/>
          <xs:element minOccurs="0" name="entryMode" type="tns:entryModeDetails"/>
          <xs:element minOccurs="0" name="cardholderId" type="tns:cardholderIdDetails"/>
          <xs:element minOccurs="0" name="terminalId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="capabilityDetails">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NOTUSED"/>
          <xs:enumeration value="MAGSTRIPE"/>
          <xs:enumeration value="KEYEDONLY"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="entryModeDetails">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NOTUSED"/>
          <xs:enumeration value="KEYED"/>
          <xs:enumeration value="TRACK1"/>
          <xs:enumeration value="TRACK2"/>
          <xs:enumeration value="COMPLETEREAD"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="cardholderIdDetails">
        <xs:restriction base="xs:string">
          <xs:enumeration value="SIGNATURE"/>
          <xs:enumeration value="PIN"/>
          <xs:enumeration value="NOPIN"/>
          <xs:enumeration value="DIRECTMARKET"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="cardNotPresent">
        <xs:sequence>
          <xs:choice>
            <xs:element name="tokenizedId" type="xs:string"/>
            <xs:element name="creditCardDetails" type="tns:creditCardAccount"/>
          </xs:choice>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="creditCardAccount">
        <xs:sequence>
          <xs:element name="number" type="xs:string"/>
          <xs:element name="expiryDate" type="xs:string"/>
          <xs:element name="type" type="tns:creditCardType"/>
          <xs:element name="name" type="xs:string"/>
          <xs:element name="cvv" type="xs:string"/>
          <xs:element name="address" type="tns:collectFundAddress"/>
          <xs:element minOccurs="0" name="orderSource" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="collectFundAddress">
        <xs:sequence>
          <xs:element name="line1" type="xs:string"/>
          <xs:element minOccurs="0" name="line2" type="xs:string"/>
          <xs:element name="city" type="xs:string"/>
          <xs:element name="state" type="xs:string"/>
          <xs:element name="zipcode" type="xs:string"/>
          <xs:element minOccurs="0" name="country" type="tns:countryCode"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="address">
        <xs:sequence>
          <xs:element name="line1" type="xs:string"/>
          <xs:element minOccurs="0" name="line2" type="xs:string"/>
          <xs:element name="city" type="xs:string"/>
          <xs:element name="state" type="xs:string"/>
          <xs:element name="zipcode" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="paypalAccount">
        <xs:sequence>
          <xs:element name="id" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="collectFundsItem">
        <xs:sequence>
          <xs:element minOccurs="0" name="referenceId" type="xs:string"/>
          <xs:element name="amount" type="xs:double"/>
          <xs:element minOccurs="0" name="memo" type="xs:string"/>
          <xs:element minOccurs="0" name="scheduled" type="tns:scheduled"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="scheduled">
        <xs:sequence>
          <xs:element name="scheduleDate" type="xs:date"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="response">
        <xs:sequence>
          <xs:element minOccurs="0" name="requestId" type="xs:long"/>
          <xs:element name="status" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="warnings" nillable="true" type="tns:warning"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="errors" nillable="true" type="tns:error"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="warning">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" type="xs:string"/>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="error">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" type="xs:string"/>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="collectFundsResponse">
        <xs:complexContent>
          <xs:extension base="tns:response">
            <xs:sequence>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="itemStatuses" nillable="true" type="tns:itemStatus"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="itemStatus">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="tns:id"/>
          <xs:element minOccurs="0" name="status" type="tns:fundsRequestStatus"/>
          <xs:element minOccurs="0" name="messageCode" type="xs:string"/>
          <xs:element minOccurs="0" name="messageDesc" type="xs:string"/>
          <xs:element minOccurs="0" name="code" type="xs:string"/>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
          <xs:element minOccurs="0" name="itemStatus" type="xs:int"/>
          <xs:element minOccurs="0" name="externalReferenceId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createClientRequest">
        <xs:sequence>
          <xs:element name="subscriberId" type="xs:long"/>
          <xs:element minOccurs="0" name="referenceId" type="xs:string"/>
          <xs:element minOccurs="0" name="firstName" type="xs:string"/>
          <xs:element minOccurs="0" name="lastName" type="xs:string"/>
          <xs:element minOccurs="0" name="middleInitial" type="xs:string"/>
          <xs:element minOccurs="0" name="ssn" type="xs:string"/>
          <xs:element minOccurs="0" name="dob" type="xs:date"/>
          <xs:element minOccurs="0" name="address" type="tns:createClientAddress"/>
          <xs:element minOccurs="0" name="homePhone" type="xs:string"/>
          <xs:element minOccurs="0" name="mobilePhone" type="xs:string"/>
          <xs:element minOccurs="0" name="workPhone" type="xs:string"/>
          <xs:element minOccurs="0" name="email" type="xs:string"/>
          <xs:element minOccurs="0" name="username" type="xs:string"/>
          <xs:element minOccurs="0" name="merchantId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createClientAddress">
        <xs:sequence>
          <xs:element minOccurs="0" name="line1" type="xs:string"/>
          <xs:element minOccurs="0" name="line2" type="xs:string"/>
          <xs:element minOccurs="0" name="city" type="xs:string"/>
          <xs:element minOccurs="0" name="state" type="xs:string"/>
          <xs:element minOccurs="0" name="zipcode" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createClientResponse">
        <xs:complexContent>
          <xs:extension base="tns:response">
            <xs:sequence>
              <xs:element minOccurs="0" name="clientId" type="tns:id"/>
              <xs:element minOccurs="0" name="clientStatus" type="tns:clientStatus"/>
              <xs:element minOccurs="0" name="cipStatus" type="tns:cipStatus"/>
              <xs:element minOccurs="0" name="username" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="statusTypes">
        <xs:sequence>
          <xs:element minOccurs="0" name="client" type="tns:clientStatus"/>
          <xs:element minOccurs="0" name="cip" type="tns:cipStatus"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="merchantDetailsUpdatable">
        <xs:sequence>
          <xs:element minOccurs="0" name="maxTransactionAmount" type="xs:long"/>
          <xs:element minOccurs="0" name="customerServiceNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="amexId" type="xs:string"/>
          <xs:element minOccurs="0" name="discoverId" type="xs:string"/>
          <xs:element minOccurs="0" name="softDescriptor" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="merchantDetails">
        <xs:sequence>
          <xs:element name="merchantCategoryCode" type="xs:string"/>
          <xs:element name="maxTransactionAmount" type="xs:long"/>
          <xs:element name="customerServiceNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="amexId" type="xs:string"/>
          <xs:element minOccurs="0" name="discoverId" type="xs:string"/>
          <xs:element name="softDescriptor" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="primaryContact">
        <xs:sequence>
          <xs:element name="firstName" type="xs:string"/>
          <xs:element name="lastName" type="xs:string"/>
          <xs:element name="phone" type="xs:string"/>
          <xs:element name="emailAddress" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createMerchantRequest">
        <xs:sequence>
          <xs:element name="subscriberId" type="xs:long"/>
          <xs:element name="firstName" type="xs:string"/>
          <xs:element name="lastName" type="xs:string"/>
          <xs:element name="ssn" type="xs:string"/>
          <xs:element name="dob" type="xs:date"/>
          <xs:element minOccurs="0" name="email" type="xs:string"/>
          <xs:element name="address" type="tns:merchantAddress"/>
          <xs:element name="bankBusinessAccount" type="tns:bankAccount"/>
          <xs:element name="merchantDetails" type="tns:merchantDetails"/>
          <xs:element name="primaryContact" type="tns:primaryContact"/>
          <xs:element name="hasAcceptedCreditCards" type="xs:boolean"/>
          <xs:element name="visaAnnualSalesVolume" type="xs:int"/>
          <xs:element name="organizationType" type="tns:organizationType"/>
          <xs:element minOccurs="0" name="taxId" type="xs:string"/>
          <xs:element minOccurs="0" name="setAsDefaultMerchantId" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <!--updatemerchant-->
      <xs:complexType name="updateMerchantRequest">
        <xs:sequence>
          <xs:element name="subscriberId" type="xs:long"/>
          <xs:element name="merchantId" type="xs:long"/>
          <xs:element minOccurs="0" name="address" type="tns:merchantAddress"/>
          <xs:element minOccurs="0" name="primaryContact" type="tns:primaryContact"/>
          <xs:element minOccurs="0" name="bankBusinessAccount" type="tns:bankAccountUpdatable"/>
          <xs:element minOccurs="0" name="merchantDetails" type="tns:merchantDetailsUpdatable"/>
          <xs:element minOccurs="0" name="setAsDefaultMerchantId" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateMerchantResponse">
        <xs:complexContent>
          <xs:extension base="tns:response">
            <xs:sequence>
              <xs:element minOccurs="0" name="merchantId" type="xs:long"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <!--getmerchant-->
      <xs:complexType name="getMerchantRequest">
        <xs:sequence>
          <xs:element name="subscriberId" type="xs:long"/>
          <xs:element name="merchantId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getMerchantResponse">
        <xs:complexContent>
          <xs:extension base="tns:response">
            <xs:sequence>
              <xs:element minOccurs="0" name="merchant" type="tns:merchant"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="merchant">
        <xs:sequence>
          <xs:element minOccurs="0" name="merchantId" type="xs:long"/>
          <xs:element minOccurs="0" name="firstName" type="xs:string"/>
          <xs:element minOccurs="0" name="lastName" type="xs:string"/>
          <xs:element minOccurs="0" name="middleInitial" type="xs:string"/>
          <xs:element minOccurs="0" name="ssn" type="xs:string"/>
          <xs:element minOccurs="0" name="dob" type="xs:date"/>
          <xs:element minOccurs="0" name="address" type="tns:merchantAddress"/>
          <!--<xs:element minOccurs="0" name="homePhone" type="xs:string" /> 
						<xs:element minOccurs="0" name="mobilePhone" type="xs:string" /> <xs:element 
						minOccurs="0" name="workPhone" type="xs:string" />-->
          <xs:element minOccurs="0" name="email" type="xs:string"/>
          <!--<xs:element minOccurs="0" name="username" type="xs:string" />-->
          <xs:element minOccurs="0" name="merchantStatus" type="xs:string"/>
          <!--<xs:element minOccurs="0" name="cipStatus" type="tns:cipStatus" 
						/>-->
          <xs:element minOccurs="0" name="bankBusinessAccount" type="tns:bankAccount"/>
          <xs:element minOccurs="0" name="modifiedOn" type="xs:date"/>
          <xs:element minOccurs="0" name="modifiedBy" type="xs:string"/>
          <xs:element minOccurs="0" name="createdOn" type="xs:date"/>
          <xs:element minOccurs="0" name="createdBy" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <!--getClient new node linkedMerchant-->
      <xs:complexType name="linkedMerchantDetails">
        <xs:sequence>
          <xs:element minOccurs="0" name="merchantId" type="xs:long"/>
          <xs:element minOccurs="0" name="firstName" type="xs:string"/>
          <xs:element minOccurs="0" name="lastName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <!--getSubscriber-->
      <xs:complexType name="getSubscriberAccountsRequest">
        <xs:sequence>
          <xs:element name="subscriberId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSubscriberAccountsResponse">
        <xs:complexContent>
          <xs:extension base="tns:response">
            <xs:sequence>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="SubscriberAccounts" nillable="true" type="tns:SubscriberAccounts"/>
              <xs:element minOccurs="0" name="subscriberConfigurations" type="tns:subscriberConfigurations"/>
              <xs:element minOccurs="0" name="draftRealizationInterval" type="tns:draftRealizationInterval"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SubscriberAccounts">
        <xs:sequence>
          <xs:element minOccurs="0" name="type" type="xs:string"/>
          <xs:element minOccurs="0" name="routingNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="accountNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="holderName" type="xs:string"/>
          <xs:element minOccurs="0" name="bankAccountType" type="xs:string"/>
          <xs:element minOccurs="0" name="pendingBalance" type="xs:long"/>
          <xs:element minOccurs="0" name="currentBalance" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="subscriberConfigurations">
        <xs:sequence>
          <xs:element minOccurs="0" name="cipVerification" type="xs:string"/>
          <xs:element minOccurs="0" name="ofacVerification" type="xs:string"/>
          <xs:element minOccurs="0" name="subscriberDefinedAccountNumber" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="prefix" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="draftRealizationInterval">
        <xs:sequence>
          <xs:element minOccurs="0" name="draft" type="xs:string"/>
          <xs:element minOccurs="0" name="draftCC" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="merchantAddress">
        <xs:sequence>
          <xs:element name="address1" type="xs:string"/>
          <xs:element minOccurs="0" name="address2" type="xs:string"/>
          <xs:element name="city" type="xs:string"/>
          <xs:element name="state" type="xs:string"/>
          <xs:element name="zipcode" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createMerchantResponse">
        <xs:complexContent>
          <xs:extension base="tns:response">
            <xs:sequence>
              <xs:element minOccurs="0" name="merchantId" type="xs:long"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="submitVerificationAnswersResponse">
        <xs:complexContent>
          <xs:extension base="tns:response">
            <xs:sequence>
              <xs:element minOccurs="0" name="cipStatus" type="tns:cipStatus"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="submitVerificationAnswersRequest">
        <xs:sequence>
          <xs:element name="subscriberId" type="xs:long"/>
          <xs:element name="clientId" type="tns:id"/>
          <xs:element name="idNumber" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="answers" nillable="true" type="tns:verifyAnswer"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="verifyAnswer">
        <xs:sequence>
          <xs:element minOccurs="1" name="type" type="xs:string"/>
          <xs:element minOccurs="1" name="answer" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteLinkedExternalAccountRequest">
        <xs:sequence>
          <xs:element name="subscriberId" type="xs:long"/>
          <xs:element name="linkedExternalAccountId" type="tns:id"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteLinkedExternalAccountResponse">
        <xs:complexContent>
          <xs:extension base="tns:response">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="searchClientRequest">
        <xs:sequence>
          <xs:element name="subscriberId" type="xs:long"/>
          <xs:element minOccurs="0" name="clientId" type="tns:id"/>
          <xs:element minOccurs="0" name="createdOnFromDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="createdOnToDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="modifiedOnFromDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="modifiedOnToDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="clientStatus" type="tns:clientStatus"/>
          <xs:element minOccurs="0" name="cipStatus" type="tns:cipStatus"/>
          <xs:element default="false" minOccurs="0" name="ascending" type="xs:boolean"/>
          <xs:element minOccurs="0" name="pageNo" type="xs:int"/>
          <xs:element minOccurs="0" name="resultsPerPage" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="searchClientResponse">
        <xs:complexContent>
          <xs:extension base="tns:response">
            <xs:sequence>
              <xs:element minOccurs="0" name="currentPage" type="xs:int"/>
              <xs:element minOccurs="0" name="totalPages" type="xs:int"/>
              <xs:element minOccurs="0" name="totalRecords" type="xs:int"/>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="clients" nillable="true" type="tns:client"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="client">
        <xs:sequence>
          <xs:element minOccurs="0" name="clientId" type="tns:id"/>
          <xs:element minOccurs="0" name="firstName" type="xs:string"/>
          <xs:element minOccurs="0" name="lastName" type="xs:string"/>
          <xs:element minOccurs="0" name="middleInitial" type="xs:string"/>
          <xs:element minOccurs="0" name="ssn" type="xs:string"/>
          <xs:element minOccurs="0" name="dob" type="xs:date"/>
          <xs:element minOccurs="0" name="address" type="tns:createClientAddress"/>
          <xs:element minOccurs="0" name="homePhone" type="xs:string"/>
          <xs:element minOccurs="0" name="mobilePhone" type="xs:string"/>
          <xs:element minOccurs="0" name="workPhone" type="xs:string"/>
          <xs:element minOccurs="0" name="email" type="xs:string"/>
          <xs:element minOccurs="0" name="username" type="xs:string"/>
          <xs:element minOccurs="0" name="clientStatus" type="tns:clientStatus"/>
          <xs:element minOccurs="0" name="cipStatus" type="tns:cipStatus"/>
          <xs:element minOccurs="0" name="modifiedOn" type="xs:date"/>
          <xs:element minOccurs="0" name="modifiedBy" type="xs:long"/>
          <xs:element minOccurs="0" name="createdOn" type="xs:date"/>
          <xs:element minOccurs="0" name="createdBy" type="xs:long"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="linkedMerchants" nillable="true" type="tns:linkedMerchantDetails"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteLinkedPayeeRequest">
        <xs:sequence>
          <xs:element name="subscriberId" type="xs:long"/>
          <xs:element name="linkedPayeeId" type="tns:id"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteLinkedPayeeResponse">
        <xs:complexContent>
          <xs:extension base="tns:response">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="closeAccountRequest">
        <xs:sequence>
          <xs:element name="subscriberId" type="xs:long"/>
          <xs:element name="accountId" type="tns:id"/>
          <xs:element minOccurs="0" name="withdrawalMethod" type="tns:withdrawalMethod"/>
          <xs:element minOccurs="0" name="checkMethodType" type="tns:checkMethodType"/>
          <xs:element minOccurs="0" name="withdrawalAccount">
            <xs:complexType>
              <xs:sequence>
                <xs:choice minOccurs="1">
                  <xs:element name="linkedAccountId" type="xs:long"/>
                  <xs:element name="bankAccount" type="tns:bankAccount"/>
                  <xs:element name="checkAddress" type="tns:checkDestination"/>
                </xs:choice>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="checkDestination">
        <xs:sequence>
          <xs:element name="name" type="xs:string"/>
          <xs:element name="address" type="tns:address"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="closeAccountResponse">
        <xs:complexContent>
          <xs:extension base="tns:response">
            <xs:sequence>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="deletedSchedules" nillable="true" type="tns:schedule"/>
              <xs:element minOccurs="0" name="balance" type="xs:double"/>
              <xs:element minOccurs="0" name="withdrawalAmount" type="xs:double"/>
              <xs:element minOccurs="0" name="expectedDate" type="xs:date"/>
              <xs:element minOccurs="0" name="withdrawalMethod" type="tns:withdrawalMethod"/>
              <xs:element minOccurs="0" name="checkMethodType" type="tns:checkMethodType"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="schedule">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="tns:id"/>
          <xs:element minOccurs="0" name="type" type="tns:activityType"/>
          <xs:element minOccurs="0" name="amount" type="xs:double"/>
          <xs:element minOccurs="0" name="scheduleDate" type="xs:date"/>
          <xs:element minOccurs="0" name="modifiedOn" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="createdOn" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="status" type="tns:fundsRequestStatus"/>
          <xs:element minOccurs="0" name="messageCode" type="xs:string"/>
          <xs:element minOccurs="0" name="messageDesc" type="xs:string"/>
          <xs:element minOccurs="0" name="externalReferenceId" type="xs:string"/>
          <xs:element minOccurs="0" name="merchantId" type="xs:string"/>
          <xs:element minOccurs="0" name="parentScheduleId" type="xs:long"/>
          <xs:element minOccurs="0" name="source">
            <xs:complexType>
              <xs:sequence>
                <xs:element minOccurs="0" name="account" type="tns:id"/>
                <xs:element minOccurs="0" name="accountNumber" type="xs:string"/>
                <xs:element minOccurs="0" name="sourceType" type="tns:scheduleSrcType"/>
                <xs:element minOccurs="0" name="linkedExternalAccountId" type="tns:id"/>
                <xs:element minOccurs="0" name="newExternalAccount" type="tns:scheduleResponseExternalAccount"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="destination">
            <xs:complexType>
              <xs:sequence>
                <xs:element minOccurs="0" name="account" type="tns:id"/>
                <xs:element minOccurs="0" name="accountNumber" type="xs:string"/>
                <xs:element minOccurs="0" name="destinationType" type="tns:scheduleSrcType"/>
                <xs:element minOccurs="0" name="linkedExternalAccountId" type="tns:id"/>
                <xs:element minOccurs="0" name="linkedPayeeId" type="tns:id"/>
                <xs:element minOccurs="0" name="bancBoxPayeeId" type="xs:long"/>
                <xs:element minOccurs="0" name="payeeAccountNumber" type="xs:string"/>
                <xs:element minOccurs="0" name="newExternalAccount" type="tns:scheduleResponseExternalAccount"/>
                <xs:element minOccurs="0" name="newPayee" type="tns:getScheduleNewPayee"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="isCancellationAllowed" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="scheduleSrcType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="BANCBOX_ACCOUNT"/>
          <xs:enumeration value="LINKED_EXT_ACCOUNT"/>
          <xs:enumeration value="BANCBOX_PAYEE"/>
          <xs:enumeration value="LINKED_PAYEE"/>
          <xs:enumeration value="EXT_BANK_ACCOUNT"/>
          <xs:enumeration value="EXT_CREDITCARD"/>
          <xs:enumeration value="EXT_PAYPAL"/>
          <xs:enumeration value="NEW_PAYEE_PAYPAL"/>
          <xs:enumeration value="NEW_PAYEE_CHECK"/>
          <xs:enumeration value="NEW_PAYEE_ACH"/>
        </xs:restriction>
      </xs:simpleType>
      <!--BBAPI-117 changes for send fund-->
      <xs:complexType name="getScheduleNewPayee">
        <xs:sequence>
          <xs:element name="payeeAccountNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="memo" type="xs:string"/>
          <xs:element name="payee">
            <xs:complexType>
              <xs:sequence>
                <xs:element minOccurs="0" name="ach" type="tns:bankAccount"/>
                <xs:element minOccurs="0" name="paypal" type="tns:paypalAccount"/>
                <xs:element minOccurs="0" name="check" type="tns:checkDestination"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <!--BBAPI-117 changes end-->
      <xs:complexType name="scheduleResponseExternalAccount">
        <xs:sequence>
          <xs:element name="account">
            <xs:complexType>
              <xs:sequence>
                <xs:element minOccurs="0" name="bankAccount" type="tns:bankAccount"/>
                <xs:element minOccurs="0" name="paypalAccount" type="tns:paypalAccount"/>
                <xs:element minOccurs="0" name="creditCardAccount" type="tns:showCreditCardAccount"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="showCreditCardAccount">
        <xs:sequence>
          <xs:element name="number" type="xs:string"/>
          <xs:element name="type" type="tns:creditCardType"/>
          <xs:element name="name" type="xs:string"/>
          <xs:element name="address" type="tns:address"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateLinkedPayeeRequest">
        <xs:sequence>
          <xs:element name="subscriberId" type="xs:long"/>
          <xs:element name="linkedPayeeId" type="tns:id"/>
          <xs:element minOccurs="0" name="payeeAccountNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="memo" type="xs:string"/>
          <xs:element name="payee">
            <xs:complexType>
              <xs:sequence>
                <xs:choice minOccurs="1">
                  <xs:element name="ach" type="tns:bankAccount"/>
                  <xs:element name="paypal" type="tns:paypalAccount"/>
                  <xs:element name="check" type="tns:checkDestination"/>
                  <xs:element name="bancbox" type="tns:bancBox"/>
                </xs:choice>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateLinkedPayeeResponse">
        <xs:complexContent>
          <xs:extension base="tns:response">
            <xs:sequence>
              <xs:element minOccurs="0" name="linkedPayeeId" type="tns:id"/>
              <xs:element minOccurs="0" name="payeeAccountNumber" type="xs:string"/>
              <xs:element minOccurs="0" name="memo" type="xs:string"/>
              <xs:element minOccurs="0" name="payee">
                <xs:complexType>
                  <xs:sequence>
                    <xs:choice minOccurs="1">
                      <xs:element name="ach" type="tns:bankAccount"/>
                      <xs:element name="paypal" type="tns:paypalAccount"/>
                      <xs:element name="check" type="tns:checkDestination"/>
                      <xs:element name="bancbox" type="tns:bancBox"/>
                    </xs:choice>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="transferFundsRequest">
        <xs:sequence>
          <xs:element name="subscriberId" type="xs:long"/>
          <xs:element name="sourceAccount" type="tns:id"/>
          <xs:element name="destinationAccount" type="tns:id"/>
          <xs:element minOccurs="0" name="memo" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="1" name="items" type="tns:transferFundsItem"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="transferFundsItem">
        <xs:sequence>
          <xs:element minOccurs="0" name="referenceId" type="xs:string"/>
          <xs:element minOccurs="0" name="memo" type="xs:string"/>
          <xs:element name="amount" type="xs:double"/>
          <xs:element minOccurs="0" name="scheduled" type="tns:scheduled"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="transferFundsResponse">
        <xs:complexContent>
          <xs:extension base="tns:response">
            <xs:sequence>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="itemStatuses" nillable="true" type="tns:itemStatus"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="linkExternalAccountRequest">
        <xs:sequence>
          <xs:element name="subscriberId" type="xs:long"/>
          <xs:element name="clientId" type="tns:id"/>
          <xs:element minOccurs="0" name="referenceId" type="xs:string"/>
          <xs:element name="account">
            <xs:complexType>
              <xs:sequence>
                <xs:choice minOccurs="1">
                  <xs:element name="bankAccount" type="tns:bankAccount"/>
                  <xs:element name="cardAccount" type="tns:linkCardAccount"/>
                  <xs:element name="paypalAccount" type="tns:paypalAccount"/>
                </xs:choice>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="linkCardAccount">
        <xs:sequence>
          <xs:choice minOccurs="1">
            <xs:element name="creditCardAccount" type="tns:linkCreditCard"/>
            <xs:element name="debitCardAccount" type="tns:debitCardAccount"/>
            <xs:element name="giftCardAccount" type="tns:giftCardAccount"/>
          </xs:choice>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="linkCreditCard">
        <xs:sequence>
          <xs:choice minOccurs="1">
            <xs:element name="tokenizedId" type="xs:string"/>
            <xs:element name="creditCardDetails" type="tns:creditCardAccount"/>
          </xs:choice>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="cardAccount">
        <xs:sequence>
          <xs:choice minOccurs="1">
            <xs:element name="creditCardAccount" type="tns:creditCardAccount"/>
            <xs:element name="debitCardAccount" type="tns:debitCardAccount"/>
            <xs:element name="giftCardAccount" type="tns:giftCardAccount"/>
          </xs:choice>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="debitCardAccount">
        <xs:sequence>
          <xs:element name="number" type="xs:string"/>
          <xs:element name="type" type="tns:debitCardType"/>
          <xs:element name="pin" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="giftCardAccount">
        <xs:sequence>
          <xs:element name="number" type="xs:string"/>
          <xs:element name="pin" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="linkExternalAccountResponse">
        <xs:complexContent>
          <xs:extension base="tns:response">
            <xs:sequence>
              <xs:element minOccurs="0" name="id" type="tns:id"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="openAccountRequest">
        <xs:sequence>
          <xs:element name="subscriberId" type="xs:long"/>
          <xs:element name="clientId" type="tns:id"/>
          <xs:element minOccurs="0" name="referenceId" type="xs:string"/>
          <xs:element minOccurs="0" name="title" type="xs:string"/>
          <xs:element minOccurs="0" name="accountType" type="tns:accountType"/>
          <xs:element minOccurs="0" name="routable" type="tns:routable"/>
          <xs:element minOccurs="0" name="subscriberAccountNumber" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="openAccountResponse">
        <xs:complexContent>
          <xs:extension base="tns:response">
            <xs:sequence>
              <xs:element minOccurs="0" name="account" type="tns:account"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="account">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="tns:id"/>
          <xs:element minOccurs="0" name="accountType" type="tns:accountType"/>
          <xs:element minOccurs="0" name="routable" type="tns:routable"/>
          <xs:element minOccurs="0" name="routingNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="current_balance" type="xs:double"/>
          <xs:element minOccurs="0" name="pending_balance" type="xs:double"/>
          <xs:element minOccurs="0" name="status" type="tns:accountStatus"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="routable">
        <xs:sequence>
          <xs:element minOccurs="0" name="credits" type="tns:routableStatus"/>
          <xs:element minOccurs="0" name="debits" type="tns:routableStatus"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="sendFundsRequest">
        <xs:sequence>
          <xs:element name="subscriberId" type="xs:long"/>
          <xs:element name="method">
            <xs:complexType>
              <xs:choice minOccurs="1">
                <xs:element name="book" type="tns:book"/>
                <xs:element name="ach" type="tns:ach"/>
                <xs:element name="check" type="tns:check"/>
                <xs:element name="wire" type="tns:wire"/>
                <xs:element name="billpay" type="tns:billpay"/>
                <xs:element name="paypal" type="tns:paypal"/>
                <xs:element name="creditcard" type="tns:creditcard"/>
              </xs:choice>
            </xs:complexType>
          </xs:element>
          <xs:element name="sourceAccount" type="tns:id"/>
          <xs:element name="destination">
            <xs:complexType>
              <xs:sequence>
                <xs:choice minOccurs="1">
                  <xs:element name="account" type="tns:id"/>
                  <xs:element name="linkedPayeeId" type="tns:id"/>
                  <xs:element name="linkedExternalAccountId" type="tns:id"/>
                  <xs:element name="bancBoxPayeeId" type="xs:long"/>
                  <xs:element name="newPayee" type="tns:newPayee"/>
                  <xs:element name="newExternalAccount" type="tns:sendExternalAccount"/>
                </xs:choice>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="payeeAccountNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="memo" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="1" name="items" type="tns:sendFundsItem"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="check">
        <xs:sequence>
          <xs:element name="type" type="tns:checkMethodType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="wire">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="billpay">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="newPayee">
        <xs:sequence>
          <xs:element name="payeeAccountNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="memo" type="xs:string"/>
          <xs:element name="payee">
            <xs:complexType>
              <xs:sequence>
                <xs:choice minOccurs="1">
                  <xs:element name="ach" type="tns:bankAccount"/>
                  <xs:element name="paypal" type="tns:paypalAccount"/>
                  <xs:element name="check" type="tns:checkDestination"/>
                </xs:choice>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="payeeDetail">
        <xs:sequence>
          <xs:element name="payeeAccountNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="memo" type="xs:string"/>
          <xs:element name="payee">
            <xs:complexType>
              <xs:sequence>
                <xs:choice minOccurs="1">
                  <xs:element name="ach" type="tns:bankAccount"/>
                  <xs:element name="paypal" type="tns:paypalAccount"/>
                  <xs:element name="check" type="tns:checkDestination"/>
                  <xs:element name="bancbox" type="tns:bancBox"/>
                </xs:choice>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="bancBox">
        <xs:sequence>
          <xs:element name="bancboxPayeeId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="sendExternalAccount">
        <xs:sequence>
          <xs:element name="account">
            <xs:complexType>
              <xs:sequence>
                <xs:choice minOccurs="1">
                  <xs:element name="bankAccount" type="tns:bankAccount"/>
                  <xs:element name="paypalAccount" type="tns:paypalAccount"/>
                  <xs:element name="creditCardAccount" type="tns:creditCardAccount"/>
                </xs:choice>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="sendFundsItem">
        <xs:sequence>
          <xs:element minOccurs="0" name="referenceId" type="xs:string"/>
          <xs:element minOccurs="0" name="memo" type="xs:string"/>
          <xs:element name="amount" type="xs:double"/>
          <xs:element minOccurs="0" name="scheduled" type="tns:scheduled"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="sendFundsResponse">
        <xs:complexContent>
          <xs:extension base="tns:response">
            <xs:sequence>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="itemStatuses" nillable="true" type="tns:itemStatus"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="getAccountActivityRequest">
        <xs:sequence>
          <xs:element name="subscriberId" type="xs:long"/>
          <xs:element name="accountId" type="tns:id"/>
          <xs:element minOccurs="0" name="fromDate" type="xs:date"/>
          <xs:element minOccurs="0" name="toDate" type="xs:date"/>
          <xs:element minOccurs="0" name="type" type="tns:transactionType"/>
          <xs:element minOccurs="0" name="method" type="tns:transactionClass"/>
          <xs:element minOccurs="0" name="fromAmount" type="xs:double"/>
          <xs:element minOccurs="0" name="toAmount" type="xs:double"/>
          <xs:element minOccurs="0" name="status" type="tns:accountActivityStatus"/>
          <xs:element default="false" minOccurs="0" name="ascending" type="xs:boolean"/>
          <xs:element minOccurs="0" name="pageNo" type="xs:int"/>
          <xs:element minOccurs="0" name="resultsPerPage" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAccountActivityResponse">
        <xs:complexContent>
          <xs:extension base="tns:response">
            <xs:sequence>
              <xs:element minOccurs="0" name="currentPage" type="xs:int"/>
              <xs:element minOccurs="0" name="totalPages" type="xs:int"/>
              <xs:element minOccurs="0" name="totalRecords" type="xs:int"/>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="activities" nillable="true" type="tns:activity"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="activity">
        <xs:sequence>
          <xs:element minOccurs="0" name="traceId" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="tns:activityType"/>
          <xs:element minOccurs="0" name="activityDate" type="xs:date"/>
          <xs:element minOccurs="0" name="description" type="xs:string"/>
          <xs:element minOccurs="0" name="debitAmount" type="xs:double"/>
          <xs:element minOccurs="0" name="creditAmount" type="xs:double"/>
          <xs:element minOccurs="0" name="balance" type="xs:double"/>
          <xs:element minOccurs="0" name="modifiedBy" type="xs:string"/>
          <xs:element minOccurs="0" name="transactionLedgerId" type="xs:long"/>
          <xs:element minOccurs="0" name="activityId" type="xs:long"/>
          <xs:element minOccurs="0" name="subTransactionReferenceId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateAccountRequest">
        <xs:sequence>
          <xs:element name="subscriberId" type="xs:long"/>
          <xs:element name="accountId" type="tns:id"/>
          <xs:element minOccurs="0" name="title" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateAccountResponse">
        <xs:complexContent>
          <xs:extension base="tns:response">
            <xs:sequence>
              <xs:element minOccurs="0" name="newAccountStatus" type="tns:accountStatus"/>
              <xs:element minOccurs="0" name="accountType" type="tns:accountType"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="updateLinkedExternalAccountRequest">
        <xs:sequence>
          <xs:element name="subscriberId" type="xs:long"/>
          <xs:element minOccurs="0" name="linkedExternalAccountId" type="tns:id"/>
          <xs:element name="account">
            <xs:complexType>
              <xs:sequence>
                <xs:choice minOccurs="1">
                  <xs:element name="bankAccount" type="tns:updatableBankAccount"/>
                  <xs:element name="cardAccount" type="tns:updatableCardAccount"/>
                  <xs:element name="paypalAccount" type="tns:paypalAccount"/>
                </xs:choice>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateLinkedExternalAccountResponse">
        <xs:complexContent>
          <xs:extension base="tns:response">
            <xs:sequence>
              <xs:element minOccurs="0" name="linkedExternalAccountId" type="tns:id"/>
              <xs:element minOccurs="0" name="account">
                <xs:complexType>
                  <xs:sequence>
                    <xs:choice minOccurs="1">
                      <xs:element name="bankAccount" type="tns:updatableBankAccount"/>
                      <xs:element name="cardAccount" type="tns:updatableCardAccount"/>
                      <xs:element name="paypalAccount" type="tns:paypalAccount"/>
                    </xs:choice>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="updatableBankAccount">
        <xs:sequence>
          <xs:element minOccurs="0" name="routingNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="accountNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="holderName" type="xs:string"/>
          <xs:element minOccurs="0" name="bankAccountType" type="tns:bankAccountType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updatableCardAccount">
        <xs:sequence>
          <xs:choice minOccurs="1">
            <xs:element name="creditCardAccount" type="tns:updatableCreditCardAccount"/>
            <xs:element name="debitCardAccount" type="tns:updatableDebitCardAccount"/>
            <xs:element name="giftCardAccount" type="tns:updatableGiftCardAccount"/>
          </xs:choice>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updatableCreditCardAccount">
        <xs:sequence>
          <xs:element minOccurs="0" name="number" type="xs:string"/>
          <xs:element minOccurs="0" name="expiryDate" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="tns:creditCardType"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="cvv" type="xs:string"/>
          <xs:element minOccurs="0" name="address" type="tns:collectFundAddress"/>
          <xs:element minOccurs="0" name="orderSource" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updatableDebitCardAccount">
        <xs:sequence>
          <xs:element minOccurs="0" name="number" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="tns:debitCardType"/>
          <xs:element minOccurs="0" name="pin" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updatableGiftCardAccount">
        <xs:sequence>
          <xs:element minOccurs="0" name="number" type="xs:string"/>
          <xs:element minOccurs="0" name="pin" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="linkPayeeRequest">
        <xs:sequence>
          <xs:element name="subscriberId" type="xs:long"/>
          <xs:element name="clientId" type="tns:id"/>
          <xs:element minOccurs="0" name="referenceId" type="xs:string"/>
          <xs:element name="payee" type="tns:payeeDetail"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="linkPayeeResponse">
        <xs:complexContent>
          <xs:extension base="tns:response">
            <xs:sequence>
              <xs:element minOccurs="0" name="id" type="tns:id"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="getClientLinkedPayeesRequest">
        <xs:sequence>
          <xs:element name="subscriberId" type="xs:long"/>
          <xs:element name="clientId" type="tns:id"/>
          <xs:element default="false" minOccurs="0" name="ascending" type="xs:boolean"/>
          <xs:element minOccurs="0" name="pageNo" type="xs:int"/>
          <xs:element minOccurs="0" name="resultsPerPage" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getClientLinkedPayeesResponse">
        <xs:complexContent>
          <xs:extension base="tns:response">
            <xs:sequence>
              <xs:element minOccurs="0" name="currentPage" type="xs:int"/>
              <xs:element minOccurs="0" name="totalPages" type="xs:int"/>
              <xs:element minOccurs="0" name="totalRecords" type="xs:int"/>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="linkedPayees" nillable="true" type="tns:payeeDetails"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="payeeDetails">
        <xs:sequence>
          <xs:element name="id" type="tns:id"/>
          <xs:element name="payeeAccountNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="payeeName" type="xs:string"/>
          <xs:element minOccurs="0" name="memo" type="xs:string"/>
          <xs:element name="payeeStatus" type="tns:payeeStatus"/>
          <xs:element name="payee">
            <xs:complexType>
              <xs:sequence>
                <xs:choice minOccurs="1">
                  <xs:element name="ach" type="tns:bankAccount"/>
                  <xs:element name="paypal" type="tns:paypalAccount"/>
                  <xs:element name="check" type="tns:checkDestination"/>
                  <xs:element name="bancbox" type="tns:bancBox"/>
                </xs:choice>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateClientRequest">
        <xs:sequence>
          <xs:element name="subscriberId" type="xs:long"/>
          <xs:element name="clientId" type="tns:id"/>
          <xs:element minOccurs="0" name="merchantId" type="xs:long"/>
          <xs:element minOccurs="0" name="firstName" type="xs:string"/>
          <xs:element minOccurs="0" name="lastName" type="xs:string"/>
          <xs:element minOccurs="0" name="middleInitial" type="xs:string"/>
          <xs:element minOccurs="0" name="ssn" type="xs:string"/>
          <xs:element minOccurs="0" name="dob" type="xs:date"/>
          <xs:element minOccurs="0" name="address" type="tns:address"/>
          <xs:element minOccurs="0" name="homePhone" type="xs:string"/>
          <xs:element minOccurs="0" name="mobilePhone" type="xs:string"/>
          <xs:element minOccurs="0" name="workPhone" type="xs:string"/>
          <xs:element minOccurs="0" name="email" type="xs:string"/>
          <xs:element minOccurs="0" name="username" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateClientResponse">
        <xs:complexContent>
          <xs:extension base="tns:response">
            <xs:sequence>
              <xs:element minOccurs="0" name="clientStatus" type="tns:clientStatus"/>
              <xs:element minOccurs="0" name="cipStatus" type="tns:cipStatus"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="collectFeesRequest">
        <xs:sequence>
          <xs:element name="subscriberId" type="xs:long"/>
          <xs:element name="account" type="tns:id"/>
          <xs:element maxOccurs="unbounded" name="items" type="tns:collectFeesItem"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="collectFeesItem">
        <xs:sequence>
          <xs:element minOccurs="0" name="referenceId" type="xs:string"/>
          <xs:element name="amount" type="xs:double"/>
          <xs:element minOccurs="0" name="memo" type="xs:string"/>
          <xs:element minOccurs="0" name="scheduled" type="tns:scheduled"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="collectFeesResponse">
        <xs:complexContent>
          <xs:extension base="tns:response">
            <xs:sequence>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="itemStatuses" nillable="true" type="tns:itemStatus"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="getSchedulesRequest">
        <xs:sequence>
          <xs:element name="subscriberId" type="xs:long"/>
          <xs:element minOccurs="0" name="clientId" type="tns:id"/>
          <xs:element minOccurs="0" name="accountId" type="tns:id"/>
          <xs:element minOccurs="0" name="type" type="tns:activityType"/>
          <xs:element minOccurs="0" name="scheduleId" type="tns:id"/>
          <xs:element minOccurs="0" name="scheduleStartDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="scheduleEndDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="modifiedOnStartDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="modifiedOnEndDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="fromAmount" type="xs:double"/>
          <xs:element minOccurs="0" name="toAmount" type="xs:double"/>
          <xs:element minOccurs="0" name="method" type="tns:transactionClass"/>
          <xs:element minOccurs="0" name="status" type="tns:fundsRequestStatus"/>
          <xs:element minOccurs="0" name="order" type="tns:schedulesOrder"/>
          <xs:element default="true" minOccurs="0" name="ascending" type="xs:boolean"/>
          <xs:element minOccurs="0" name="pageNo" type="xs:int"/>
          <xs:element minOccurs="0" name="resultsPerPage" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSchedulesResponse">
        <xs:complexContent>
          <xs:extension base="tns:response">
            <xs:sequence>
              <xs:element minOccurs="0" name="currentPage" type="xs:int"/>
              <xs:element minOccurs="0" name="totalPages" type="xs:int"/>
              <xs:element minOccurs="0" name="totalRecords" type="xs:int"/>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="schedules" nillable="true" type="tns:schedule"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="verifyClientRequest">
        <xs:sequence>
          <xs:element name="subscriberId" type="xs:long"/>
          <xs:element minOccurs="0" name="clientId" type="tns:id"/>
          <xs:element minOccurs="0" name="generateQuestions" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="verifyClientResponse">
        <xs:complexContent>
          <xs:extension base="tns:response">
            <xs:sequence>
              <xs:element minOccurs="0" name="idNumber" type="xs:string"/>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="questions" nillable="true" type="tns:question"/>
              <xs:element minOccurs="0" name="cipStatus" type="tns:cipStatus"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="question">
        <xs:sequence>
          <xs:element minOccurs="1" name="prompt" type="xs:string"/>
          <xs:element minOccurs="1" name="type" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="1" name="answers" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="searchBancBoxPayeesRequest">
        <xs:sequence>
          <xs:element minOccurs="0" name="payeeName" type="xs:string"/>
          <xs:element minOccurs="0" name="accountNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="billerClass" type="xs:string"/>
          <xs:element minOccurs="0" name="billerType" type="xs:string"/>
          <xs:element default="false" minOccurs="0" name="ascending" type="xs:boolean"/>
          <xs:element minOccurs="0" name="pageNo" type="xs:int"/>
          <xs:element minOccurs="0" name="resultsPerPage" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="searchBancBoxPayeesResponse">
        <xs:complexContent>
          <xs:extension base="tns:response">
            <xs:sequence>
              <xs:element minOccurs="0" name="currentPage" type="xs:int"/>
              <xs:element minOccurs="0" name="totalPages" type="xs:int"/>
              <xs:element minOccurs="0" name="totalRecords" type="xs:int"/>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="bancBoxPayees" nillable="true" type="tns:bancBoxPayee"/>
              <xs:element minOccurs="0" name="request" type="tns:searchBancBoxPayeesRequest"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="bancBoxPayee">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:long"/>
          <xs:element minOccurs="0" name="payeeName" type="xs:string"/>
          <xs:element minOccurs="0" name="payeePrevName" type="xs:string"/>
          <xs:element minOccurs="0" name="payeeAKA" type="xs:string"/>
          <xs:element minOccurs="0" name="payeeAddress" type="tns:address"/>
          <xs:element minOccurs="0" name="mask" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateClientStatusRequest">
        <xs:sequence>
          <xs:element name="subscriberId" type="xs:long"/>
          <xs:element minOccurs="0" name="clientId" type="tns:id"/>
          <xs:element name="clientStatus" type="tns:clientStatus"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateClientStatusResponse">
        <xs:complexContent>
          <xs:extension base="tns:response">
            <xs:sequence>
              <xs:element minOccurs="0" name="newStatus" type="tns:clientStatus"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="cancelSchedulesRequest">
        <xs:sequence>
          <xs:element name="subscriberId" type="xs:long"/>
          <xs:element maxOccurs="unbounded" name="scheduleIds" type="tns:id"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="cancelSchedulesResponse">
        <xs:complexContent>
          <xs:extension base="tns:response">
            <xs:sequence>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="schedules" nillable="true" type="tns:ccsirItem"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ccsirItem">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="tns:id"/>
          <xs:element minOccurs="0" name="status" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="warnings" nillable="true" type="tns:warning"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="errors" nillable="true" type="tns:error"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getClientLinkedExternalAccountsRequest">
        <xs:sequence>
          <xs:element name="subscriberId" type="xs:long"/>
          <xs:element name="clientId" type="tns:id"/>
          <xs:element default="false" minOccurs="0" name="ascending" type="xs:boolean"/>
          <xs:element minOccurs="0" name="pageNo" type="xs:int"/>
          <xs:element minOccurs="0" name="resultsPerPage" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getClientLinkedExternalAccountsResponse">
        <xs:complexContent>
          <xs:extension base="tns:response">
            <xs:sequence>
              <xs:element minOccurs="0" name="currentPage" type="xs:int"/>
              <xs:element minOccurs="0" name="totalPages" type="xs:int"/>
              <xs:element minOccurs="0" name="totalRecords" type="xs:int"/>
              <xs:element minOccurs="0" name="clientId" type="tns:id"/>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="linkedExternalAccounts" nillable="true" type="tns:externalAccount"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="externalAccount">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="tns:id"/>
          <xs:element name="externalAccountStatus" type="tns:externalAccountStatus"/>
          <xs:element minOccurs="0" name="account">
            <xs:complexType>
              <xs:sequence>
                <xs:choice minOccurs="1">
                  <xs:element name="bankAccount" type="tns:bankAccount"/>
                  <xs:element name="cardAccount" type="tns:cardAccount"/>
                  <xs:element name="paypalAccount" type="tns:paypalAccount"/>
                </xs:choice>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="linkFileRequest">
        <xs:sequence>
          <xs:element name="subscriberId" type="xs:long"/>
          <xs:element name="clientId" type="tns:id"/>
          <xs:element minOccurs="0" name="referenceId" type="xs:string"/>
          <xs:element name="file" type="tns:file"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="file">
        <xs:sequence>
          <xs:element name="name" type="xs:string"/>
          <xs:element name="fileClass" type="tns:fileClass"/>
          <xs:element minOccurs="0" name="url" type="xs:string"/>
          <xs:element name="content" type="xs:base64Binary"/>
          <xs:element minOccurs="0" name="comment" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="linkFileResponse">
        <xs:complexContent>
          <xs:extension base="tns:response">
            <xs:sequence>
              <xs:element minOccurs="0" name="id" type="tns:id"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="getClientAccountsRequest">
        <xs:sequence>
          <xs:element name="subscriberId" type="xs:long"/>
          <xs:element name="clientId" type="tns:id"/>
          <xs:element default="false" minOccurs="0" name="ascending" type="xs:boolean"/>
          <xs:element minOccurs="0" name="pageNo" type="xs:int"/>
          <xs:element minOccurs="0" name="resultsPerPage" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getClientAccountsResponse">
        <xs:complexContent>
          <xs:extension base="tns:response">
            <xs:sequence>
              <xs:element minOccurs="0" name="currentPage" type="xs:int"/>
              <xs:element minOccurs="0" name="totalPages" type="xs:int"/>
              <xs:element minOccurs="0" name="totalRecords" type="xs:int"/>
              <xs:element minOccurs="0" name="clientId" type="tns:id"/>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="accounts" nillable="true" type="tns:account"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="cancelClientRequest">
        <xs:sequence>
          <xs:element name="subscriberId" type="xs:long"/>
          <xs:element name="clientId" type="tns:id"/>
          <xs:element minOccurs="0" name="comment" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="cancelClientResponse">
        <xs:complexContent>
          <xs:extension base="tns:response">
            <xs:sequence>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="openAccounts" nillable="true" type="tns:account"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="getClientRequest">
        <xs:sequence>
          <xs:element name="subscriberId" type="xs:long"/>
          <xs:element name="clientId" type="tns:id"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getClientResponse">
        <xs:complexContent>
          <xs:extension base="tns:response">
            <xs:sequence>
              <xs:element minOccurs="0" name="client" type="tns:client"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <!--added for return fund-->
      <xs:complexType name="returnFundRequest">
        <xs:sequence>
          <xs:element name="subscriberId" type="xs:long"/>
          <xs:element name="scheduleId" type="tns:id"/>
          <xs:element minOccurs="0" name="reasonForRefund" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="returnFundResponse">
        <xs:complexContent>
          <xs:extension base="tns:response">
            <xs:sequence>
              <xs:element minOccurs="0" name="externalReferenceId" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="updateMerchantStatusRequest">
        <xs:sequence>
          <xs:element name="subscriberId" type="xs:long"/>
          <xs:element name="merchantId" type="xs:string"/>
          <xs:element name="merchantStatus" type="tns:merchantStatus"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateMerchantStatusResponse">
        <xs:complexContent>
          <xs:extension base="tns:response">
            <xs:sequence>
              <xs:element minOccurs="0" name="merchantId" type="xs:long"/>
              <xs:element minOccurs="0" name="merchantStatus" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="updateScheduleRequest">
        <xs:sequence>
          <xs:element name="subscriberId" type="xs:long"/>
          <xs:element name="activity" type="tns:id"/>
          <xs:element name="rescheduleDate" type="xs:date"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateScheduleResponse">
        <xs:complexContent>
          <xs:extension base="tns:response">
            <xs:sequence>
              <xs:element minOccurs="0" name="rescheduleDate" type="xs:date"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <!--Credit Card Verification Internal API-->
      <xs:complexType name="verifyCreditCardRequest">
        <xs:sequence>
          <xs:element name="amount" type="xs:int"/>
          <xs:element name="orderId" type="xs:string"/>
          <xs:element name="orderSource" type="xs:string"/>
          <xs:element name="billToAddress" type="tns:billToAddress"/>
          <xs:element name="ccDetails">
            <xs:complexType>
              <xs:sequence>
                <xs:choice minOccurs="1">
                  <xs:element name="tokenId" type="xs:string"/>
                  <xs:element name="cardDetails" type="tns:cardDetails"/>
                </xs:choice>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="authenticationValue" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="billToAddress">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="firstName" type="xs:string"/>
          <xs:element minOccurs="0" name="middleInitial" type="xs:string"/>
          <xs:element minOccurs="0" name="lastName" type="xs:string"/>
          <xs:element minOccurs="0" name="companyName" type="xs:string"/>
          <xs:element name="addressLine1" type="xs:string"/>
          <xs:element minOccurs="0" name="addressLine2" type="xs:string"/>
          <xs:element minOccurs="0" name="addressLine3" type="xs:string"/>
          <xs:element name="city" type="xs:string"/>
          <xs:element name="state" type="xs:string"/>
          <xs:element name="zipcode" type="xs:string"/>
          <xs:element name="country" type="tns:countryCode"/>
          <xs:element minOccurs="0" name="email" type="xs:string"/>
          <xs:element minOccurs="0" name="phone" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="cardDetails">
        <xs:sequence>
          <xs:element name="cardType" type="xs:string"/>
          <xs:element name="cardNumber" type="xs:string"/>
          <xs:element name="expDate" type="xs:string"/>
          <xs:element minOccurs="0" name="cardValidationNum" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="verifyCreditCardResponse">
        <xs:complexContent>
          <xs:extension base="tns:response">
            <xs:sequence>
              <xs:element name="response" type="xs:string"/>
              <xs:element name="message" type="xs:string"/>
              <xs:element minOccurs="0" name="authCode" type="xs:string"/>
              <xs:element minOccurs="0" name="avsResult" type="xs:string"/>
              <xs:element minOccurs="0" name="cardValidationResult" type="xs:string"/>
              <xs:element minOccurs="0" name="authenticationResult" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <!--Verify Client Manually API-->
      <xs:complexType name="verifyClientManuallyRequest">
        <xs:sequence>
          <xs:element name="subscriberId" type="xs:long"/>
          <xs:element name="clientId" type="tns:id"/>
          <xs:element name="status">
            <xs:complexType>
              <xs:sequence>
                <xs:element minOccurs="0" name="newCipStatus" type="tns:cipStatus"/>
                <xs:element minOccurs="0" name="newOfacStatus" type="tns:ofacStatus"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="verifyClientManuallyResponse">
        <xs:complexContent>
          <xs:extension base="tns:response">
            <xs:sequence>
              <xs:element minOccurs="0" name="cipStatus" type="tns:cipStatus"/>
              <xs:element minOccurs="0" name="ofacStatus" type="tns:ofacStatus"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:simpleType name="transactionType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="DEBIT"/>
          <xs:enumeration value="CREDIT"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="transactionClass">
        <xs:restriction base="xs:string">
          <xs:enumeration value="ACH"/>
          <xs:enumeration value="WIRE"/>
          <xs:enumeration value="CHECK"/>
          <xs:enumeration value="CREDITCARD"/>
          <xs:enumeration value="EBP"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="organizationType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="INDIVIDUAL_SOLE_PROPRIETORSHIP"/>
          <xs:enumeration value="CORPORATION"/>
          <xs:enumeration value="LIMITED_LIABILITY_COMPANY"/>
          <xs:enumeration value="PARTNERSHIP"/>
          <xs:enumeration value="ASSOCIATION_ESTATE_TRUST"/>
          <xs:enumeration value="TAX_EXEMPT_ORGANIZATION"/>
          <xs:enumeration value="INTERNATIONAL_ORGANIZATION"/>
          <xs:enumeration value="GOVERNMENT_AGENCY"/>
        </xs:restriction>
      </xs:simpleType>
      <!--<xs:simpleType name="date"> <xs:restriction base="xs:string" /> </xs:simpleType>-->
      <xs:simpleType name="payeeStatus">
        <xs:restriction base="xs:string">
          <xs:enumeration value="INACTIVE"/>
          <xs:enumeration value="ACTIVE"/>
          <xs:enumeration value="DELETED"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="externalAccountStatus">
        <xs:restriction base="xs:string">
          <xs:enumeration value="INACTIVE"/>
          <xs:enumeration value="ACTIVE"/>
          <xs:enumeration value="DELETED"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="bankAccountType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="SAVING"/>
          <xs:enumeration value="CHECKING"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="creditCardType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="VISA"/>
          <xs:enumeration value="MASTERCARD"/>
          <xs:enumeration value="AMERICANEXPRESS"/>
          <xs:enumeration value="DISCOVER"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="clientStatus">
        <xs:restriction base="xs:string">
          <xs:enumeration value="ACTIVE"/>
          <xs:enumeration value="INACTIVE"/>
          <xs:enumeration value="CANCELLED"/>
          <xs:enumeration value="SUSPENDED"/>
          <xs:enumeration value="DELETED"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ofacStatus">
        <xs:restriction base="xs:string">
          <xs:enumeration value="UNVERIFIED"/>
          <xs:enumeration value="VERIFIED"/>
          <xs:enumeration value="IGNORED"/>
          <xs:enumeration value="REJECTED"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="cipStatus">
        <xs:restriction base="xs:string">
          <xs:enumeration value="UNVERIFIED"/>
          <xs:enumeration value="VERIFIED"/>
          <xs:enumeration value="IGNORED"/>
          <xs:enumeration value="REJECTED"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="withdrawalMethod">
        <xs:restriction base="xs:string">
          <xs:enumeration value="ACH"/>
          <xs:enumeration value="CHECK"/>
          <xs:enumeration value="PAYPAL"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="checkMethodType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="STD"/>
          <xs:enumeration value="TWODAY"/>
          <xs:enumeration value="OVERNIGHT"/>
          <xs:enumeration value="PLUS"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="activityType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="COLLECT"/>
          <xs:enumeration value="SEND"/>
          <xs:enumeration value="TRANSFER"/>
          <xs:enumeration value="FEE"/>
          <xs:enumeration value="CHARGEBACK"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="fundsRequestStatus">
        <xs:restriction base="xs:string">
          <xs:enumeration value="SCHEDULED"/>
          <xs:enumeration value="COMPLETED"/>
          <xs:enumeration value="FAILED"/>
          <xs:enumeration value="PENDING"/>
          <xs:enumeration value="IN_PROCESS"/>
          <xs:enumeration value="CANCELLED"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="accountActivityStatus">
        <xs:restriction base="xs:string">
          <xs:enumeration value="COMPLETED"/>
          <xs:enumeration value="FAILED"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="schedulesOrder">
        <xs:restriction base="xs:string">
          <xs:enumeration value="ID"/>
          <xs:enumeration value="SCHEDULED_DATE"/>
          <xs:enumeration value="MODIFIED_ON"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="debitCardType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="MASTERCARD"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="accountStatus">
        <xs:restriction base="xs:string">
          <xs:enumeration value="OPEN"/>
          <xs:enumeration value="CLOSED"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="fileClass">
        <xs:restriction base="xs:string">
          <xs:enumeration value="AUTHORIZED"/>
          <xs:enumeration value="IDENTIFICATION"/>
          <xs:enumeration value="OTHER"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="routableStatus">
        <xs:restriction base="xs:string">
          <xs:enumeration value="YES"/>
          <xs:enumeration value="NO"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="accountType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="GENERAL"/>
          <xs:enumeration value="SPECIAL"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="merchantStatus">
        <xs:restriction base="xs:string">
          <xs:enumeration value="ACTIVE"/>
          <xs:enumeration value="INACTIVE"/>
          <xs:enumeration value="CLOSED"/>
          <!--<xs:enumeration value="PENDING" />-->
        </xs:restriction>
      </xs:simpleType>
      <!--<xs:simpleType name="orderSourceDetails">
				<xs:restriction base="xs:string">
					<xs:enumeration value="ECOMMERCE" />
					<xs:enumeration value="INSTALLMENT" />
					<xs:enumeration value="MAILORDER" />
					<xs:enumeration value="RECURRING" />
					<xs:enumeration value="RETAIL" />
					<xs:enumeration value="TELEPHONE" />
					<xs:enumeration value="3DSAUTHENTICATED" />
					<xs:enumeration value="3DSATTEMPTED" />
					<xs:enumeration value="RECURRINGTEL" />
				</xs:restriction>
			</xs:simpleType>-->
      <xs:simpleType name="countryCode">
        <xs:restriction base="xs:string">
          <xs:enumeration value="AD"/>
          <xs:enumeration value="AE"/>
          <xs:enumeration value="AF"/>
          <xs:enumeration value="AG"/>
          <xs:enumeration value="AI"/>
          <xs:enumeration value="AL"/>
          <xs:enumeration value="AM"/>
          <xs:enumeration value="AN"/>
          <xs:enumeration value="AO"/>
          <xs:enumeration value="AQ"/>
          <xs:enumeration value="AR"/>
          <xs:enumeration value="AS"/>
          <xs:enumeration value="AT"/>
          <xs:enumeration value="AU"/>
          <xs:enumeration value="AW"/>
          <xs:enumeration value="AX"/>
          <xs:enumeration value="AZ"/>
          <xs:enumeration value="BA"/>
          <xs:enumeration value="BB"/>
          <xs:enumeration value="BD"/>
          <xs:enumeration value="BE"/>
          <xs:enumeration value="BF"/>
          <xs:enumeration value="BG"/>
          <xs:enumeration value="BH"/>
          <xs:enumeration value="BI"/>
          <xs:enumeration value="BJ"/>
          <xs:enumeration value="BL"/>
          <xs:enumeration value="BM"/>
          <xs:enumeration value="BN"/>
          <xs:enumeration value="BO"/>
          <xs:enumeration value="BQ"/>
          <xs:enumeration value="BR"/>
          <xs:enumeration value="BS"/>
          <xs:enumeration value="BT"/>
          <xs:enumeration value="BV"/>
          <xs:enumeration value="BW"/>
          <xs:enumeration value="BY"/>
          <xs:enumeration value="BZ"/>
          <xs:enumeration value="CA"/>
          <xs:enumeration value="CC"/>
          <xs:enumeration value="CD"/>
          <xs:enumeration value="CF"/>
          <xs:enumeration value="CG"/>
          <xs:enumeration value="CH"/>
          <xs:enumeration value="CI"/>
          <xs:enumeration value="CK"/>
          <xs:enumeration value="CL"/>
          <xs:enumeration value="CM"/>
          <xs:enumeration value="CN"/>
          <xs:enumeration value="CO"/>
          <xs:enumeration value="CR"/>
          <xs:enumeration value="CU"/>
          <xs:enumeration value="CV"/>
          <xs:enumeration value="CW"/>
          <xs:enumeration value="CX"/>
          <xs:enumeration value="CY"/>
          <xs:enumeration value="CZ"/>
          <xs:enumeration value="DE"/>
          <xs:enumeration value="DJ"/>
          <xs:enumeration value="DK"/>
          <xs:enumeration value="DM"/>
          <xs:enumeration value="DO"/>
          <xs:enumeration value="DZ"/>
          <xs:enumeration value="EC"/>
          <xs:enumeration value="EE"/>
          <xs:enumeration value="EG"/>
          <xs:enumeration value="EH"/>
          <xs:enumeration value="ER"/>
          <xs:enumeration value="ES"/>
          <xs:enumeration value="ET"/>
          <xs:enumeration value="FI"/>
          <xs:enumeration value="FJ"/>
          <xs:enumeration value="FK"/>
          <xs:enumeration value="FM"/>
          <xs:enumeration value="FO"/>
          <xs:enumeration value="FR"/>
          <xs:enumeration value="GA"/>
          <xs:enumeration value="GB"/>
          <xs:enumeration value="GD"/>
          <xs:enumeration value="GE"/>
          <xs:enumeration value="GF"/>
          <xs:enumeration value="GG"/>
          <xs:enumeration value="GH"/>
          <xs:enumeration value="GI"/>
          <xs:enumeration value="GL"/>
          <xs:enumeration value="GM"/>
          <xs:enumeration value="GN"/>
          <xs:enumeration value="GP"/>
          <xs:enumeration value="GQ"/>
          <xs:enumeration value="GR"/>
          <xs:enumeration value="GS"/>
          <xs:enumeration value="GT"/>
          <xs:enumeration value="GU"/>
          <xs:enumeration value="GW"/>
          <xs:enumeration value="GY"/>
          <xs:enumeration value="HK"/>
          <xs:enumeration value="HM"/>
          <xs:enumeration value="HN"/>
          <xs:enumeration value="HR"/>
          <xs:enumeration value="HT"/>
          <xs:enumeration value="HU"/>
          <xs:enumeration value="ID"/>
          <xs:enumeration value="IE"/>
          <xs:enumeration value="IL"/>
          <xs:enumeration value="IM"/>
          <xs:enumeration value="IN"/>
          <xs:enumeration value="IO"/>
          <xs:enumeration value="IQ"/>
          <xs:enumeration value="IR"/>
          <xs:enumeration value="IS"/>
          <xs:enumeration value="IT"/>
          <xs:enumeration value="JE"/>
          <xs:enumeration value="JM"/>
          <xs:enumeration value="JO"/>
          <xs:enumeration value="JP"/>
          <xs:enumeration value="KE"/>
          <xs:enumeration value="KG"/>
          <xs:enumeration value="KH"/>
          <xs:enumeration value="KI"/>
          <xs:enumeration value="KM"/>
          <xs:enumeration value="KN"/>
          <xs:enumeration value="KP"/>
          <xs:enumeration value="KR"/>
          <xs:enumeration value="KW"/>
          <xs:enumeration value="KY"/>
          <xs:enumeration value="KZ"/>
          <xs:enumeration value="LA"/>
          <xs:enumeration value="LB"/>
          <xs:enumeration value="LC"/>
          <xs:enumeration value="LI"/>
          <xs:enumeration value="LK"/>
          <xs:enumeration value="LR"/>
          <xs:enumeration value="LS"/>
          <xs:enumeration value="LT"/>
          <xs:enumeration value="LU"/>
          <xs:enumeration value="LV"/>
          <xs:enumeration value="LY"/>
          <xs:enumeration value="MA"/>
          <xs:enumeration value="MC"/>
          <xs:enumeration value="MD"/>
          <xs:enumeration value="ME"/>
          <xs:enumeration value="MF"/>
          <xs:enumeration value="MG"/>
          <xs:enumeration value="MH"/>
          <xs:enumeration value="MK"/>
          <xs:enumeration value="ML"/>
          <xs:enumeration value="MM"/>
          <xs:enumeration value="MN"/>
          <xs:enumeration value="MO"/>
          <xs:enumeration value="MP"/>
          <xs:enumeration value="MQ"/>
          <xs:enumeration value="MR"/>
          <xs:enumeration value="MS"/>
          <xs:enumeration value="MT"/>
          <xs:enumeration value="MU"/>
          <xs:enumeration value="MV"/>
          <xs:enumeration value="MW"/>
          <xs:enumeration value="MX"/>
          <xs:enumeration value="MY"/>
          <xs:enumeration value="MZ"/>
          <xs:enumeration value="NA"/>
          <xs:enumeration value="NC"/>
          <xs:enumeration value="NE"/>
          <xs:enumeration value="NF"/>
          <xs:enumeration value="NG"/>
          <xs:enumeration value="NI"/>
          <xs:enumeration value="NL"/>
          <xs:enumeration value="NO"/>
          <xs:enumeration value="NP"/>
          <xs:enumeration value="NR"/>
          <xs:enumeration value="NU"/>
          <xs:enumeration value="NZ"/>
          <xs:enumeration value="OM"/>
          <xs:enumeration value="PA"/>
          <xs:enumeration value="PE"/>
          <xs:enumeration value="PF"/>
          <xs:enumeration value="PG"/>
          <xs:enumeration value="PH"/>
          <xs:enumeration value="PK"/>
          <xs:enumeration value="PL"/>
          <xs:enumeration value="PM"/>
          <xs:enumeration value="PN"/>
          <xs:enumeration value="PR"/>
          <xs:enumeration value="PS"/>
          <xs:enumeration value="PT"/>
          <xs:enumeration value="PW"/>
          <xs:enumeration value="PY"/>
          <xs:enumeration value="QA"/>
          <xs:enumeration value="RE"/>
          <xs:enumeration value="RO"/>
          <xs:enumeration value="RS"/>
          <xs:enumeration value="RU"/>
          <xs:enumeration value="RW"/>
          <xs:enumeration value="SA"/>
          <xs:enumeration value="SB"/>
          <xs:enumeration value="SC"/>
          <xs:enumeration value="SD"/>
          <xs:enumeration value="SE"/>
          <xs:enumeration value="SG"/>
          <xs:enumeration value="SH"/>
          <xs:enumeration value="SI"/>
          <xs:enumeration value="SJ"/>
          <xs:enumeration value="SK"/>
          <xs:enumeration value="SL"/>
          <xs:enumeration value="SM"/>
          <xs:enumeration value="SN"/>
          <xs:enumeration value="SO"/>
          <xs:enumeration value="SR"/>
          <xs:enumeration value="SS"/>
          <xs:enumeration value="ST"/>
          <xs:enumeration value="SV"/>
          <xs:enumeration value="SX"/>
          <xs:enumeration value="SY"/>
          <xs:enumeration value="SZ"/>
          <xs:enumeration value="TC"/>
          <xs:enumeration value="TD"/>
          <xs:enumeration value="TF"/>
          <xs:enumeration value="TG"/>
          <xs:enumeration value="TH"/>
          <xs:enumeration value="TJ"/>
          <xs:enumeration value="TK"/>
          <xs:enumeration value="TL"/>
          <xs:enumeration value="TM"/>
          <xs:enumeration value="TN"/>
          <xs:enumeration value="TO"/>
          <xs:enumeration value="TR"/>
          <xs:enumeration value="TT"/>
          <xs:enumeration value="TV"/>
          <xs:enumeration value="TW"/>
          <xs:enumeration value="TZ"/>
          <xs:enumeration value="UA"/>
          <xs:enumeration value="UG"/>
          <xs:enumeration value="UM"/>
          <xs:enumeration value="US"/>
          <xs:enumeration value="USA"/>
          <xs:enumeration value="UY"/>
          <xs:enumeration value="UZ"/>
          <xs:enumeration value="VA"/>
          <xs:enumeration value="VC"/>
          <xs:enumeration value="VE"/>
          <xs:enumeration value="VG"/>
          <xs:enumeration value="VI"/>
          <xs:enumeration value="VN"/>
          <xs:enumeration value="VU"/>
          <xs:enumeration value="WF"/>
          <xs:enumeration value="WS"/>
          <xs:enumeration value="YE"/>
          <xs:enumeration value="YT"/>
          <xs:enumeration value="ZA"/>
          <xs:enumeration value="ZM"/>
          <xs:enumeration value="ZW"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="verifyClientResponse">
    <wsdl:part name="return" type="tns:verifyClientResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="linkExternalAccountResponse">
    <wsdl:part name="return" type="tns:linkExternalAccountResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteLinkedExternalAccount">
    <wsdl:part name="deleteLinkedExternalAccountRequest" type="tns:deleteLinkedExternalAccountRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="linkPayeeResponse">
    <wsdl:part name="return" type="tns:linkPayeeResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="closeAccount">
    <wsdl:part name="closeAccountRequest" type="tns:closeAccountRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="verifyClient">
    <wsdl:part name="verifyClient" type="tns:verifyClientRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createMerchantResponse">
    <wsdl:part name="createMerchantResponse" type="tns:createMerchantResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createClient">
    <wsdl:part name="createClientRequest" type="tns:createClientRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateClientResponse">
    <wsdl:part name="return" type="tns:updateClientResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateMerchantRequest">
    <wsdl:part name="updateMerchantRequest" type="tns:updateMerchantRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="verifyCreditCardResponse">
    <wsdl:part name="return" type="tns:verifyCreditCardResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateClient">
    <wsdl:part name="updateClientRequest" type="tns:updateClientRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteLinkedExternalAccountResponse">
    <wsdl:part name="return" type="tns:deleteLinkedExternalAccountResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getClientLinkedExternalAccounts">
    <wsdl:part name="getClientLinkedExternalAccountsRequest" type="tns:getClientLinkedExternalAccountsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateAccount">
    <wsdl:part name="updateAccountRequest" type="tns:updateAccountRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="collectFunds">
    <wsdl:part name="collectFundsRequest" type="tns:collectFundsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateScheduleResponse">
    <wsdl:part name="return" type="tns:updateScheduleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSubscriberAccountsResponse">
    <wsdl:part name="getSubscriberAccountsResponse" type="tns:getSubscriberAccountsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchClientsResponse">
    <wsdl:part name="return" type="tns:searchClientResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="verifyClientManuallyResponse">
    <wsdl:part name="return" type="tns:verifyClientManuallyResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateClientStatusResponse">
    <wsdl:part name="return" type="tns:updateClientStatusResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="linkFile">
    <wsdl:part name="linkFileRequest" type="tns:linkFileRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteLinkedPayee">
    <wsdl:part name="deleteLinkedPayeeRequest" type="tns:deleteLinkedPayeeRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="transferFunds">
    <wsdl:part name="transferFundsRequest" type="tns:transferFundsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="collectFeesResponse">
    <wsdl:part name="return" type="tns:collectFeesResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchBancBoxPayeesResponse">
    <wsdl:part name="return" type="tns:searchBancBoxPayeesResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="linkFileResponse">
    <wsdl:part name="return" type="tns:linkFileResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getClientAccountsResponse">
    <wsdl:part name="return" type="tns:getClientAccountsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getClient">
    <wsdl:part name="getClientRequest" type="tns:getClientRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="verifyClientManually">
    <wsdl:part name="verifyClientManually" type="tns:verifyClientManuallyRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getClientAccounts">
    <wsdl:part name="getClientAccountsRequest" type="tns:getClientAccountsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateMerchantStatusResponse">
    <wsdl:part name="merchantStatusResponse" type="tns:updateMerchantStatusResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteLinkedPayeeResponse">
    <wsdl:part name="return" type="tns:deleteLinkedPayeeResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateAccountResponse">
    <wsdl:part name="return" type="tns:updateAccountResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSchedulesResponse">
    <wsdl:part name="return" type="tns:getSchedulesResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateScheduleRequest">
    <wsdl:part name="updateScheduleRequest" type="tns:updateScheduleRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchClients">
    <wsdl:part name="searchClientRequest" type="tns:searchClientRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateLinkedPayee">
    <wsdl:part name="updateLinkedPayeeRequest" type="tns:updateLinkedPayeeRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="cancelSchedulesResponse">
    <wsdl:part name="return" type="tns:cancelSchedulesResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateLinkedExternalAccount">
    <wsdl:part name="updateLinkedExternalAccountRequest" type="tns:updateLinkedExternalAccountRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMerchantResponse">
    <wsdl:part name="getMerchantResponse" type="tns:getMerchantResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="submitVerificationAnswers">
    <wsdl:part name="submitVerificationAnswers" type="tns:submitVerificationAnswersRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAccountActivity">
    <wsdl:part name="getAccountActivityRequest" type="tns:getAccountActivityRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="openAccount">
    <wsdl:part name="openAccountRequest" type="tns:openAccountRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="linkPayee">
    <wsdl:part name="linkPayeeRequest" type="tns:linkPayeeRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="submitVerificationAnswersResponse">
    <wsdl:part name="return" type="tns:submitVerificationAnswersResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getClientLinkedExternalAccountsResponse">
    <wsdl:part name="return" type="tns:getClientLinkedExternalAccountsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getClientResponse">
    <wsdl:part name="return" type="tns:getClientResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="returnFundResponse">
    <wsdl:part name="return" type="tns:returnFundResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="verifyCreditCard">
    <wsdl:part name="verifyCreditCard" type="tns:verifyCreditCardRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="collectFees">
    <wsdl:part name="collectFeesRequest" type="tns:collectFeesRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateLinkedPayeeResponse">
    <wsdl:part name="return" type="tns:updateLinkedPayeeResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchBancBoxPayees">
    <wsdl:part name="searchBancBoxPayeesRequest" type="tns:searchBancBoxPayeesRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateMerchantResponse">
    <wsdl:part name="updateMerchantResponse" type="tns:updateMerchantResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateMerchantStatusRequest">
    <wsdl:part name="updateMerchantStatusRequest" type="tns:updateMerchantStatusRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSubscriberAccountsRequest">
    <wsdl:part name="getSubscriberAccountsRequest" type="tns:getSubscriberAccountsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMerchantRequest">
    <wsdl:part name="getMerchantRequest" type="tns:getMerchantRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="transferFundsResponse">
    <wsdl:part name="return" type="tns:transferFundsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="collectFundsResponse">
    <wsdl:part name="return" type="tns:collectFundsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createMerchantRequest">
    <wsdl:part name="createMerchantRequest" type="tns:createMerchantRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateLinkedExternalAccountResponse">
    <wsdl:part name="return" type="tns:updateLinkedExternalAccountResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendFundsResponse">
    <wsdl:part name="return" type="tns:sendFundsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAccountActivityResponse">
    <wsdl:part name="return" type="tns:getAccountActivityResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="linkExternalAccount">
    <wsdl:part name="linkExternalAccountRequest" type="tns:linkExternalAccountRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="closeAccountResponse">
    <wsdl:part name="return" type="tns:closeAccountResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendFunds">
    <wsdl:part name="sendFundsRequest" type="tns:sendFundsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSchedules">
    <wsdl:part name="getSchedulesRequest" type="tns:getSchedulesRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="cancelSchedules">
    <wsdl:part name="cancelSchedulesRequest" type="tns:cancelSchedulesRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getClientLinkedPayees">
    <wsdl:part name="getClientLinkedPayeesRequest" type="tns:getClientLinkedPayeesRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="cancelClientResponse">
    <wsdl:part name="return" type="tns:cancelClientResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getClientLinkedPayeesResponse">
    <wsdl:part name="return" type="tns:getClientLinkedPayeesResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateClientStatus">
    <wsdl:part name="updateClientStatusRequest" type="tns:updateClientStatusRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="returnFund">
    <wsdl:part name="returnFund" type="tns:returnFundRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="openAccountResponse">
    <wsdl:part name="return" type="tns:openAccountResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="cancelClient">
    <wsdl:part name="cancelClientRequest" type="tns:cancelClientRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createClientResponse">
    <wsdl:part name="return" type="tns:createClientResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="BBX">
    <wsdl:operation name="collectFunds">
      <wsdl:input message="tns:collectFunds" name="collectFunds"></wsdl:input>
      <wsdl:output message="tns:collectFundsResponse" name="collectFundsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="createClient">
      <wsdl:input message="tns:createClient" name="createClient"></wsdl:input>
      <wsdl:output message="tns:createClientResponse" name="createClientResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteLinkedExternalAccount">
      <wsdl:input message="tns:deleteLinkedExternalAccount" name="deleteLinkedExternalAccount"></wsdl:input>
      <wsdl:output message="tns:deleteLinkedExternalAccountResponse" name="deleteLinkedExternalAccountResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="searchClients">
      <wsdl:input message="tns:searchClients" name="searchClients"></wsdl:input>
      <wsdl:output message="tns:searchClientsResponse" name="searchClientsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteLinkedPayee">
      <wsdl:input message="tns:deleteLinkedPayee" name="deleteLinkedPayee"></wsdl:input>
      <wsdl:output message="tns:deleteLinkedPayeeResponse" name="deleteLinkedPayeeResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="closeAccount">
      <wsdl:input message="tns:closeAccount" name="closeAccount"></wsdl:input>
      <wsdl:output message="tns:closeAccountResponse" name="closeAccountResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateLinkedPayee">
      <wsdl:input message="tns:updateLinkedPayee" name="updateLinkedPayee"></wsdl:input>
      <wsdl:output message="tns:updateLinkedPayeeResponse" name="updateLinkedPayeeResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="transferFunds">
      <wsdl:input message="tns:transferFunds" name="transferFunds"></wsdl:input>
      <wsdl:output message="tns:transferFundsResponse" name="transferFundsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="linkExternalAccount">
      <wsdl:input message="tns:linkExternalAccount" name="linkExternalAccount"></wsdl:input>
      <wsdl:output message="tns:linkExternalAccountResponse" name="linkExternalAccountResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="openAccount">
      <wsdl:input message="tns:openAccount" name="openAccount"></wsdl:input>
      <wsdl:output message="tns:openAccountResponse" name="openAccountResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="sendFunds">
      <wsdl:input message="tns:sendFunds" name="sendFunds"></wsdl:input>
      <wsdl:output message="tns:sendFundsResponse" name="sendFundsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAccountActivity">
      <wsdl:input message="tns:getAccountActivity" name="getAccountActivity"></wsdl:input>
      <wsdl:output message="tns:getAccountActivityResponse" name="getAccountActivityResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateAccount">
      <wsdl:input message="tns:updateAccount" name="updateAccount"></wsdl:input>
      <wsdl:output message="tns:updateAccountResponse" name="updateAccountResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateLinkedExternalAccount">
      <wsdl:input message="tns:updateLinkedExternalAccount" name="updateLinkedExternalAccount"></wsdl:input>
      <wsdl:output message="tns:updateLinkedExternalAccountResponse" name="updateLinkedExternalAccountResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="linkPayee">
      <wsdl:input message="tns:linkPayee" name="linkPayee"></wsdl:input>
      <wsdl:output message="tns:linkPayeeResponse" name="linkPayeeResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getClientLinkedPayees">
      <wsdl:input message="tns:getClientLinkedPayees" name="getClientLinkedPayees"></wsdl:input>
      <wsdl:output message="tns:getClientLinkedPayeesResponse" name="getClientLinkedPayeesResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateClient">
      <wsdl:input message="tns:updateClient" name="updateClient"></wsdl:input>
      <wsdl:output message="tns:updateClientResponse" name="updateClientResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="collectFees">
      <wsdl:input message="tns:collectFees" name="collectFees"></wsdl:input>
      <wsdl:output message="tns:collectFeesResponse" name="collectFeesResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSchedules">
      <wsdl:input message="tns:getSchedules" name="getSchedules"></wsdl:input>
      <wsdl:output message="tns:getSchedulesResponse" name="getSchedulesResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="searchBancBoxPayees">
      <wsdl:input message="tns:searchBancBoxPayees" name="searchBancBoxPayees"></wsdl:input>
      <wsdl:output message="tns:searchBancBoxPayeesResponse" name="searchBancBoxPayeesResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateClientStatus">
      <wsdl:input message="tns:updateClientStatus" name="updateClientStatus"></wsdl:input>
      <wsdl:output message="tns:updateClientStatusResponse" name="updateClientStatusResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="cancelSchedules">
      <wsdl:input message="tns:cancelSchedules" name="cancelSchedules"></wsdl:input>
      <wsdl:output message="tns:cancelSchedulesResponse" name="cancelSchedulesResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getClientLinkedExternalAccounts">
      <wsdl:input message="tns:getClientLinkedExternalAccounts" name="getClientLinkedExternalAccounts"></wsdl:input>
      <wsdl:output message="tns:getClientLinkedExternalAccountsResponse" name="getClientLinkedExternalAccountsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="linkFile">
      <wsdl:input message="tns:linkFile" name="linkFile"></wsdl:input>
      <wsdl:output message="tns:linkFileResponse" name="linkFileResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getClientAccounts">
      <wsdl:input message="tns:getClientAccounts" name="getClientAccounts"></wsdl:input>
      <wsdl:output message="tns:getClientAccountsResponse" name="getClientAccountsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="cancelClient">
      <wsdl:input message="tns:cancelClient" name="cancelClient"></wsdl:input>
      <wsdl:output message="tns:cancelClientResponse" name="cancelClientResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getClient">
      <wsdl:input message="tns:getClient" name="getClient"></wsdl:input>
      <wsdl:output message="tns:getClientResponse" name="getClientResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="verifyClient">
      <wsdl:input message="tns:verifyClient" name="verifyClient"></wsdl:input>
      <wsdl:output message="tns:verifyClientResponse" name="verifyClientResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="submitVerificationAnswers">
      <wsdl:input message="tns:submitVerificationAnswers" name="submitVerificationAnswers"></wsdl:input>
      <wsdl:output message="tns:submitVerificationAnswersResponse" name="submitVerificationAnswersResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="createMerchant">
      <wsdl:input message="tns:createMerchantRequest" name="createMerchantRequest"></wsdl:input>
      <wsdl:output message="tns:createMerchantResponse" name="createMerchantResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMerchant">
      <wsdl:input message="tns:getMerchantRequest" name="getMerchantRequest"></wsdl:input>
      <wsdl:output message="tns:getMerchantResponse" name="getMerchantResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSubscriberAccounts">
      <wsdl:input message="tns:getSubscriberAccountsRequest" name="getSubscriberAccountsRequest"></wsdl:input>
      <wsdl:output message="tns:getSubscriberAccountsResponse" name="getSubscriberAccountsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateMerchant">
      <wsdl:input message="tns:updateMerchantRequest" name="updateMerchantRequest"></wsdl:input>
      <wsdl:output message="tns:updateMerchantResponse" name="updateMerchantResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="returnFund">
      <wsdl:input message="tns:returnFund" name="returnFund"></wsdl:input>
      <wsdl:output message="tns:returnFundResponse" name="returnFundResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateMerchantStatus">
      <wsdl:input message="tns:updateMerchantStatusRequest" name="updateMerchantStatusRequest"></wsdl:input>
      <wsdl:output message="tns:updateMerchantStatusResponse" name="updateMerchantStatusResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateSchedule">
      <wsdl:input message="tns:updateScheduleRequest" name="updateScheduleRequest"></wsdl:input>
      <wsdl:output message="tns:updateScheduleResponse" name="updateScheduleResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="verifyCreditCard">
      <wsdl:input message="tns:verifyCreditCard" name="verifyCreditCard"></wsdl:input>
      <wsdl:output message="tns:verifyCreditCardResponse" name="verifyCreditCardResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="verifyClientManually">
      <wsdl:input message="tns:verifyClientManually" name="verifyClientManually"></wsdl:input>
      <wsdl:output message="tns:verifyClientManuallyResponse" name="verifyClientManuallyResponse"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="BBXServiceSoapBinding" type="tns:BBX">
    <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="collectFunds">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="collectFunds">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:input>
      <wsdl:output name="collectFundsResponse">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="createClient">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="createClient">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:input>
      <wsdl:output name="createClientResponse">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteLinkedExternalAccount">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="deleteLinkedExternalAccount">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteLinkedExternalAccountResponse">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="searchClients">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="searchClients">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:input>
      <wsdl:output name="searchClientsResponse">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteLinkedPayee">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="deleteLinkedPayee">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteLinkedPayeeResponse">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="closeAccount">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="closeAccount">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:input>
      <wsdl:output name="closeAccountResponse">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateLinkedPayee">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="updateLinkedPayee">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateLinkedPayeeResponse">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="transferFunds">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="transferFunds">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:input>
      <wsdl:output name="transferFundsResponse">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="linkExternalAccount">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="linkExternalAccount">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:input>
      <wsdl:output name="linkExternalAccountResponse">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="openAccount">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="openAccount">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:input>
      <wsdl:output name="openAccountResponse">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="sendFunds">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="sendFunds">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:input>
      <wsdl:output name="sendFundsResponse">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAccountActivity">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="getAccountActivity">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAccountActivityResponse">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateAccount">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="updateAccount">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateAccountResponse">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateLinkedExternalAccount">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="updateLinkedExternalAccount">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateLinkedExternalAccountResponse">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getClientLinkedPayees">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="getClientLinkedPayees">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getClientLinkedPayeesResponse">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="linkPayee">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="linkPayee">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:input>
      <wsdl:output name="linkPayeeResponse">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateClient">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="updateClient">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateClientResponse">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="collectFees">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="collectFees">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:input>
      <wsdl:output name="collectFeesResponse">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSchedules">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="getSchedules">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSchedulesResponse">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="searchBancBoxPayees">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="searchBancBoxPayees">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:input>
      <wsdl:output name="searchBancBoxPayeesResponse">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateClientStatus">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="updateClientStatus">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateClientStatusResponse">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="cancelSchedules">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="cancelSchedules">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:input>
      <wsdl:output name="cancelSchedulesResponse">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getClientLinkedExternalAccounts">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="getClientLinkedExternalAccounts">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getClientLinkedExternalAccountsResponse">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="linkFile">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="linkFile">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:input>
      <wsdl:output name="linkFileResponse">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getClientAccounts">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="getClientAccounts">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getClientAccountsResponse">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="cancelClient">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="cancelClient">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:input>
      <wsdl:output name="cancelClientResponse">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getClient">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="getClient">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getClientResponse">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="verifyClient">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="verifyClient">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:input>
      <wsdl:output name="verifyClientResponse">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="submitVerificationAnswers">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="submitVerificationAnswers">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:input>
      <wsdl:output name="submitVerificationAnswersResponse">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="returnFund">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="returnFund">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:input>
      <wsdl:output name="returnFundResponse">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateMerchantStatus">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="updateMerchantStatusRequest">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateMerchantStatusResponse">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="createMerchant">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="createMerchantRequest">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:input>
      <wsdl:output name="createMerchantResponse">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMerchant">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="getMerchantRequest">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getMerchantResponse">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSubscriberAccounts">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="getSubscriberAccountsRequest">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSubscriberAccountsResponse">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateMerchant">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="updateMerchantRequest">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateMerchantResponse">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateSchedule">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="updateScheduleRequest">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateScheduleResponse">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="verifyCreditCard">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="verifyCreditCard">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:input>
      <wsdl:output name="verifyCreditCardResponse">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="verifyClientManually">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="verifyClientManually">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:input>
      <wsdl:output name="verifyClientManuallyResponse">
        <soap:body namespace="schema.bancbox.com" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="BBXService">
    <wsdl:port binding="tns:BBXServiceSoapBinding" name="BBXPort">
      <soap:address location="https://qa-api.bancbox.com:9090/v3/BBXPort"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="cancelClient" bindingOperationName="cancelClient" type="Request-Response" outputName="cancelClientResponse" inputName="cancelClient" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:cancelClient>
         <cancelClientRequest>
            <subscriberId>?</subscriberId>
            <clientId>
               <!--Optional:-->
               <bancBoxId>?</bancBoxId>
               <!--Optional:-->
               <subscriberReferenceId>?</subscriberReferenceId>
            </clientId>
            <!--Optional:-->
            <comment>?</comment>
         </cancelClientRequest>
      </sch:cancelClient>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/cancelClient"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Request 2"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:cancelClient>
         <cancelClientRequest>
            <subscriberId>?</subscriberId>
            <clientId>
               <!--Optional:-->
               <bancBoxId>?</bancBoxId>
               <!--Optional:-->
               <subscriberReferenceId>?</subscriberReferenceId>
            </clientId>
            <!--Optional:-->
            <comment>?</comment>
         </cancelClientRequest>
      </sch:cancelClient>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/cancelClient"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="cancelSchedules" bindingOperationName="cancelSchedules" type="Request-Response" outputName="cancelSchedulesResponse" inputName="cancelSchedules" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:cancelSchedules>
         <cancelSchedulesRequest>
            <subscriberId>?</subscriberId>
            <!--1 or more repetitions:-->
            <scheduleIds>
               <!--Optional:-->
               <bancBoxId>?</bancBoxId>
               <!--Optional:-->
               <subscriberReferenceId>?</subscriberReferenceId>
            </scheduleIds>
         </cancelSchedulesRequest>
      </sch:cancelSchedules>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/cancelSchedules"/></con:call></con:operation><con:operation isOneWay="false" action="" name="closeAccount" bindingOperationName="closeAccount" type="Request-Response" outputName="closeAccountResponse" inputName="closeAccount" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:closeAccount>
         <closeAccountRequest>
            <subscriberId>?</subscriberId>
            <accountId>
               <!--Optional:-->
               <bancBoxId>?</bancBoxId>
               <!--Optional:-->
               <subscriberReferenceId>?</subscriberReferenceId>
            </accountId>
            <!--Optional:-->
            <withdrawalMethod>?</withdrawalMethod>
            <!--Optional:-->
            <checkMethodType>?</checkMethodType>
            <!--Optional:-->
            <withdrawalAccount>
               <!--You have a CHOICE of the next 3 items at this level-->
               <linkedAccountId>?</linkedAccountId>
               <bankAccount>
                  <routingNumber>?</routingNumber>
                  <accountNumber>?</accountNumber>
                  <holderName>?</holderName>
                  <bankAccountType>?</bankAccountType>
               </bankAccount>
               <checkAddress>
                  <name>?</name>
                  <address>
                     <line1>?</line1>
                     <!--Optional:-->
                     <line2>?</line2>
                     <city>?</city>
                     <state>?</state>
                     <zipcode>?</zipcode>
                  </address>
               </checkAddress>
            </withdrawalAccount>
         </closeAccountRequest>
      </sch:closeAccount>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/closeAccount"/></con:call></con:operation><con:operation isOneWay="false" action="" name="collectFees" bindingOperationName="collectFees" type="Request-Response" outputName="collectFeesResponse" inputName="collectFees" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header>
      <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
            <wsse:Username>RICHA</wsse:Username>
            <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">abcd1234</wsse:Password>
         </wsse:UsernameToken>
      </wsse:Security>
   </soapenv:Header>
   <soapenv:Body>
      <sch:collectFees>
         <collectFeesRequest>
            <subscriberId>200255</subscriberId>
            <account>
               <!--Optional:-->
               <bancBoxId>530255100001</bancBoxId>
               <!--Optional:-->
          <!--     <subscriberReferenceId>?</subscriberReferenceId> -->
            </account>
            <!--1 or more repetitions:-->
            <items>
               <!--Optional:-->
             <!--  <referenceId>?</referenceId>    -->
               <amount>200</amount>
               <!--Optional:-->
             <!--      <memo>?</memo> -->
               <!--Optional:-->
               <!--     <scheduled>
                  <scheduleDate>?</scheduleDate>
               </scheduled>  -->    
            </items>
         </collectFeesRequest>
      </sch:collectFees>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/collectFees"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Request 2"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:collectFees>
         <collectFeesRequest>
            <subscriberId>?</subscriberId>
            <account>
               <!--Optional:-->
               <bancBoxId>?</bancBoxId>
               <!--Optional:-->
               <subscriberReferenceId>?</subscriberReferenceId>
            </account>
            <!--1 or more repetitions:-->
            <items>
               <!--Optional:-->
               <referenceId>?</referenceId>
               <amount>?</amount>
               <!--Optional:-->
               <memo>?</memo>
               <!--Optional:-->
               <scheduled>
                  <scheduleDate>?</scheduleDate>
               </scheduled>
            </items>
         </collectFeesRequest>
      </sch:collectFees>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/collectFees"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="collectFunds" bindingOperationName="collectFunds" type="Request-Response" outputName="collectFundsResponse" inputName="collectFunds" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="ACH"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
  <soapenv:Header>
     <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
           <wsse:Username>PSP@bancbox.com</wsse:Username>
           <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">abcd1234</wsse:Password>
         </wsse:UsernameToken>
      </wsse:Security></soapenv:Header>
   <soapenv:Body>
      <sch:collectFunds>
         <collectFundsRequest>
            <subscriberId>200134</subscriberId>
           
            <method>
               <!--You have a CHOICE of the next 3 items at this level-->
               <ach/>
            </method>
            <source>
               <!--You have a CHOICE of the next 3 items at this level-->
               <newExternalAccount>
                  <account>
                     <!--You have a CHOICE of the next 2 items at this level-->
                     <bankAccount>
                        <routingNumber>051000017</routingNumber>
               <accountNumber>8878787879897789</accountNumber>
               <holderName>ANSHUL</holderName>
               <bankAccountType>SAVING</bankAccountType>
                     </bankAccount>
                  </account>
               </newExternalAccount>
            </source>
            <destinationAccount>
            <account>
               <bancBoxId>530134100007</bancBoxId>
               </account>
            </destinationAccount>
            <!--1 or more repetitions:-->
            <items>
               <amount>11.12</amount>
               <!--Optional:-->
               <memo>ACH123</memo>
            </items>
         
            
          
            
         </collectFundsRequest>
      </sch:collectFunds>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/collectFunds"/><con:wsrmConfig version="1.2"/></con:call><con:call name="cc"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header>
      <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
            <wsse:Username>RICHA</wsse:Username>
            <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">abcd1234</wsse:Password>
         </wsse:UsernameToken>
      </wsse:Security>
   </soapenv:Header>
   <soapenv:Body>
      <sch:collectFunds>
         <collectFundsRequest>
            <subscriberId>200255</subscriberId>
           
            <method>
               <!--You have a CHOICE of the next 3 items at this level-->
              
               <creditcard/>
            </method>
            <source>
               <!--You have a CHOICE of the next 3 items at this level-->
              
               <newExternalAccount>
                  <account>
                     <!--You have a CHOICE of the next 2 items at this level-->
                    <creditCardAccount>
                        <cardNotPresent>
                           <!--You have a CHOICE of the next 2 items at this level-->
                          
                           <creditCardDetails>
                              <number>4556863984700451</number>
                              <expiryDate>12/14</expiryDate>
                              <type>VISA</type>
                              <name>deepika</name>
                              <cvv>777</cvv>
                              <address>
                                 <line1>567 crli</line1>
                                 
                                 <city>ATLANTA</city>
                                 <state>GA</state>
                                 <zipcode>97865</zipcode>
                                 <!--Optional:-->
                                 <country>US</country>
                              </address>
                              
                           </creditCardDetails>
                        </cardNotPresent>
                     </creditCardAccount>
                  </account>
               </newExternalAccount>
            </source>
            <destinationAccount>
               <!--You have a CHOICE of the next 2 items at this level-->
               <account>
                  <!--Optional:-->
                  <bancBoxId>530255100001</bancBoxId>
                
               </account>
               
            </destinationAccount>
            <!--1 or more repetitions:-->
            <items>
              
               <amount>66</amount>
              <scheduled>
                  <scheduleDate>2013-12-12</scheduleDate>
               </scheduled>
            </items>
         </collectFundsRequest>
      </sch:collectFunds>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/collectFunds"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="createClient" bindingOperationName="createClient" type="Request-Response" outputName="createClientResponse" inputName="createClient" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:createClient>
         <createClientRequest>
            <subscriberId>?</subscriberId>
            <!--Optional:-->
            <referenceId>?</referenceId>
            <!--Optional:-->
            <firstName>?</firstName>
            <!--Optional:-->
            <lastName>?</lastName>
            <!--Optional:-->
            <middleInitial>?</middleInitial>
            <!--Optional:-->
            <ssn>?</ssn>
            <!--Optional:-->
            <dob>?</dob>
            <!--Optional:-->
            <address>
               <!--Optional:-->
               <line1>?</line1>
               <!--Optional:-->
               <line2>?</line2>
               <!--Optional:-->
               <city>?</city>
               <!--Optional:-->
               <state>?</state>
               <!--Optional:-->
               <zipcode>?</zipcode>
            </address>
            <!--Optional:-->
            <homePhone>?</homePhone>
            <!--Optional:-->
            <mobilePhone>?</mobilePhone>
            <!--Optional:-->
            <workPhone>?</workPhone>
            <!--Optional:-->
            <email>?</email>
            <!--Optional:-->
            <username>?</username>
            <!--Optional:-->
            <merchantId>?</merchantId>
         </createClientRequest>
      </sch:createClient>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/createClient"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="createMerchant" bindingOperationName="createMerchant" type="Request-Response" outputName="createMerchantResponse" inputName="createMerchantRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:createMerchant>
         <createMerchantRequest>
            <subscriberId>?</subscriberId>
            <firstName>?</firstName>
            <lastName>?</lastName>
            <ssn>?</ssn>
            <dob>?</dob>
            <!--Optional:-->
            <email>?</email>
            <address>
               <address1>?</address1>
               <!--Optional:-->
               <address2>?</address2>
               <city>?</city>
               <state>?</state>
               <zipcode>?</zipcode>
            </address>
            <bankBusinessAccount>
               <routingNumber>?</routingNumber>
               <accountNumber>?</accountNumber>
               <holderName>?</holderName>
               <bankAccountType>?</bankAccountType>
            </bankBusinessAccount>
            <merchantDetails>
               <merchantCategoryCode>?</merchantCategoryCode>
               <maxTransactionAmount>?</maxTransactionAmount>
               <customerServiceNumber>?</customerServiceNumber>
               <!--Optional:-->
               <amexId>?</amexId>
               <!--Optional:-->
               <discoverId>?</discoverId>
               <softDescriptor>?</softDescriptor>
            </merchantDetails>
            <primaryContact>
               <firstName>?</firstName>
               <lastName>?</lastName>
               <phone>?</phone>
               <emailAddress>?</emailAddress>
            </primaryContact>
            <hasAcceptedCreditCards>?</hasAcceptedCreditCards>
            <visaAnnualSalesVolume>?</visaAnnualSalesVolume>
            <organizationType>?</organizationType>
            <!--Optional:-->
            <taxId>?</taxId>
            <!--Optional:-->
            <setAsDefaultMerchantId>?</setAsDefaultMerchantId>
         </createMerchantRequest>
      </sch:createMerchant>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/createMerchantRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Copy of Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header>
      <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
            <wsse:Username>RICHA</wsse:Username>
            <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">abcd1234</wsse:Password>
         </wsse:UsernameToken>
      </wsse:Security>
   </soapenv:Header>
   <soapenv:Body>
      <sch:createMerchant>
         <createMerchantRequest>
            <subscriberId>200255</subscriberId>
            <firstName>Richa</firstName>
            <lastName>Sharma</lastName>
            <ssn>111-27-2122</ssn>
            <dob>1988-04-12</dob>
            <!--Optional:-->
            <email>Richa.1test1@bancbox.com</email>
            <address>
               <address1>311 Main St.</address1>
               <!--Optional:-->
               <address2>4511</address2>
               <city>kol</city>
               <state>NY</state>
               <zipcode>11111</zipcode>
            </address>
            <bankBusinessAccount>
               <routingNumber>051000017</routingNumber>
               <accountNumber>5302551000011111</accountNumber>
               <holderName>ABHIMANYU</holderName>
               <bankAccountType>SAVING</bankAccountType>
            </bankBusinessAccount>
            <merchantDetails>
               <merchantCategoryCode>7399</merchantCategoryCode>
               <maxTransactionAmount>100000</maxTransactionAmount>
               <customerServiceNumber>6787678911</customerServiceNumber>
              
               <softDescriptor>wee765</softDescriptor>
            </merchantDetails>
            <primaryContact>
               <firstName>ii</firstName>
               <lastName>yy</lastName>
               <phone>6789879878</phone>
               <emailAddress>Richa.1testjh@bancbox.com</emailAddress>
            </primaryContact>
            <hasAcceptedCreditCards>false</hasAcceptedCreditCards>
            <visaAnnualSalesVolume>500</visaAnnualSalesVolume>
            <organizationType>INDIVIDUAL_SOLE_PROPRIETORSHIP</organizationType>
            <!--Optional:-->
            <taxId>2a32A23</taxId>
            <!--Optional:-->
            <setAsDefaultMerchantId>true</setAsDefaultMerchantId>
         </createMerchantRequest>
      </sch:createMerchant>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/createMerchantRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="deleteLinkedExternalAccount" bindingOperationName="deleteLinkedExternalAccount" type="Request-Response" outputName="deleteLinkedExternalAccountResponse" inputName="deleteLinkedExternalAccount" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:deleteLinkedExternalAccount>
         <deleteLinkedExternalAccountRequest>
            <subscriberId>?</subscriberId>
            <linkedExternalAccountId>
               <!--Optional:-->
               <bancBoxId>?</bancBoxId>
               <!--Optional:-->
               <subscriberReferenceId>?</subscriberReferenceId>
            </linkedExternalAccountId>
         </deleteLinkedExternalAccountRequest>
      </sch:deleteLinkedExternalAccount>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/deleteLinkedExternalAccount"/></con:call></con:operation><con:operation isOneWay="false" action="" name="deleteLinkedPayee" bindingOperationName="deleteLinkedPayee" type="Request-Response" outputName="deleteLinkedPayeeResponse" inputName="deleteLinkedPayee" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:deleteLinkedPayee>
         <deleteLinkedPayeeRequest>
            <subscriberId>?</subscriberId>
            <linkedPayeeId>
               <!--Optional:-->
               <bancBoxId>?</bancBoxId>
               <!--Optional:-->
               <subscriberReferenceId>?</subscriberReferenceId>
            </linkedPayeeId>
         </deleteLinkedPayeeRequest>
      </sch:deleteLinkedPayee>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/deleteLinkedPayee"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getAccountActivity" bindingOperationName="getAccountActivity" type="Request-Response" outputName="getAccountActivityResponse" inputName="getAccountActivity" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:getAccountActivity>
         <getAccountActivityRequest>
            <subscriberId>?</subscriberId>
            <accountId>
               <!--Optional:-->
               <bancBoxId>?</bancBoxId>
               <!--Optional:-->
               <subscriberReferenceId>?</subscriberReferenceId>
            </accountId>
            <!--Optional:-->
            <fromDate>?</fromDate>
            <!--Optional:-->
            <toDate>?</toDate>
            <!--Optional:-->
            <type>?</type>
            <!--Optional:-->
            <method>?</method>
            <!--Optional:-->
            <fromAmount>?</fromAmount>
            <!--Optional:-->
            <toAmount>?</toAmount>
            <!--Optional:-->
            <status>?</status>
            <!--Optional:-->
            <ascending>false</ascending>
            <!--Optional:-->
            <pageNo>?</pageNo>
            <!--Optional:-->
            <resultsPerPage>?</resultsPerPage>
         </getAccountActivityRequest>
      </sch:getAccountActivity>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/getAccountActivity"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getClient" bindingOperationName="getClient" type="Request-Response" outputName="getClientResponse" inputName="getClient" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:getClient>
         <getClientRequest>
            <subscriberId>?</subscriberId>
            <clientId>
               <!--Optional:-->
               <bancBoxId>?</bancBoxId>
               <!--Optional:-->
               <subscriberReferenceId>?</subscriberReferenceId>
            </clientId>
         </getClientRequest>
      </sch:getClient>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/getClient"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getClientAccounts" bindingOperationName="getClientAccounts" type="Request-Response" outputName="getClientAccountsResponse" inputName="getClientAccounts" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:getClientAccounts>
         <getClientAccountsRequest>
            <subscriberId>?</subscriberId>
            <clientId>
               <!--Optional:-->
               <bancBoxId>?</bancBoxId>
               <!--Optional:-->
               <subscriberReferenceId>?</subscriberReferenceId>
            </clientId>
            <!--Optional:-->
            <ascending>false</ascending>
            <!--Optional:-->
            <pageNo>?</pageNo>
            <!--Optional:-->
            <resultsPerPage>?</resultsPerPage>
         </getClientAccountsRequest>
      </sch:getClientAccounts>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/getClientAccounts"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getClientLinkedExternalAccounts" bindingOperationName="getClientLinkedExternalAccounts" type="Request-Response" outputName="getClientLinkedExternalAccountsResponse" inputName="getClientLinkedExternalAccounts" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:getClientLinkedExternalAccounts>
         <getClientLinkedExternalAccountsRequest>
            <subscriberId>?</subscriberId>
            <clientId>
               <!--Optional:-->
               <bancBoxId>?</bancBoxId>
               <!--Optional:-->
               <subscriberReferenceId>?</subscriberReferenceId>
            </clientId>
            <!--Optional:-->
            <ascending>false</ascending>
            <!--Optional:-->
            <pageNo>?</pageNo>
            <!--Optional:-->
            <resultsPerPage>?</resultsPerPage>
         </getClientLinkedExternalAccountsRequest>
      </sch:getClientLinkedExternalAccounts>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/getClientLinkedExternalAccounts"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getClientLinkedPayees" bindingOperationName="getClientLinkedPayees" type="Request-Response" outputName="getClientLinkedPayeesResponse" inputName="getClientLinkedPayees" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:getClientLinkedPayees>
         <getClientLinkedPayeesRequest>
            <subscriberId>?</subscriberId>
            <clientId>
               <!--Optional:-->
               <bancBoxId>?</bancBoxId>
               <!--Optional:-->
               <subscriberReferenceId>?</subscriberReferenceId>
            </clientId>
            <!--Optional:-->
            <ascending>false</ascending>
            <!--Optional:-->
            <pageNo>?</pageNo>
            <!--Optional:-->
            <resultsPerPage>?</resultsPerPage>
         </getClientLinkedPayeesRequest>
      </sch:getClientLinkedPayees>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/getClientLinkedPayees"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getMerchant" bindingOperationName="getMerchant" type="Request-Response" outputName="getMerchantResponse" inputName="getMerchantRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:getMerchant>
         <getMerchantRequest>
            <subscriberId>?</subscriberId>
            <merchantId>?</merchantId>
         </getMerchantRequest>
      </sch:getMerchant>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/getMerchantRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getSchedules" bindingOperationName="getSchedules" type="Request-Response" outputName="getSchedulesResponse" inputName="getSchedules" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:getSchedules>
         <getSchedulesRequest>
            <subscriberId>?</subscriberId>
            <!--Optional:-->
            <clientId>
               <!--Optional:-->
               <bancBoxId>?</bancBoxId>
               <!--Optional:-->
               <subscriberReferenceId>?</subscriberReferenceId>
            </clientId>
            <!--Optional:-->
            <accountId>
               <!--Optional:-->
               <bancBoxId>?</bancBoxId>
               <!--Optional:-->
               <subscriberReferenceId>?</subscriberReferenceId>
            </accountId>
            <!--Optional:-->
            <type>?</type>
            <!--Optional:-->
            <scheduleId>
               <!--Optional:-->
               <bancBoxId>?</bancBoxId>
               <!--Optional:-->
               <subscriberReferenceId>?</subscriberReferenceId>
            </scheduleId>
            <!--Optional:-->
            <scheduleStartDate>?</scheduleStartDate>
            <!--Optional:-->
            <scheduleEndDate>?</scheduleEndDate>
            <!--Optional:-->
            <modifiedOnStartDate>?</modifiedOnStartDate>
            <!--Optional:-->
            <modifiedOnEndDate>?</modifiedOnEndDate>
            <!--Optional:-->
            <fromAmount>?</fromAmount>
            <!--Optional:-->
            <toAmount>?</toAmount>
            <!--Optional:-->
            <method>?</method>
            <!--Optional:-->
            <status>?</status>
            <!--Optional:-->
            <order>?</order>
            <!--Optional:-->
            <ascending>true</ascending>
            <!--Optional:-->
            <pageNo>?</pageNo>
            <!--Optional:-->
            <resultsPerPage>?</resultsPerPage>
         </getSchedulesRequest>
      </sch:getSchedules>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/getSchedules"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getSubscriberAccounts" bindingOperationName="getSubscriberAccounts" type="Request-Response" outputName="getSubscriberAccountsResponse" inputName="getSubscriberAccountsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:getSubscriberAccounts>
         <getSubscriberAccountsRequest>
            <subscriberId>?</subscriberId>
         </getSubscriberAccountsRequest>
      </sch:getSubscriberAccounts>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/getSubscriberAccountsRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="linkExternalAccount" bindingOperationName="linkExternalAccount" type="Request-Response" outputName="linkExternalAccountResponse" inputName="linkExternalAccount" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:linkExternalAccount>
         <linkExternalAccountRequest>
            <subscriberId>?</subscriberId>
            <clientId>
               <!--Optional:-->
               <bancBoxId>?</bancBoxId>
               <!--Optional:-->
               <subscriberReferenceId>?</subscriberReferenceId>
            </clientId>
            <!--Optional:-->
            <referenceId>?</referenceId>
            <account>
               <!--You have a CHOICE of the next 3 items at this level-->
               <bankAccount>
                  <routingNumber>?</routingNumber>
                  <accountNumber>?</accountNumber>
                  <holderName>?</holderName>
                  <bankAccountType>?</bankAccountType>
               </bankAccount>
               <cardAccount>
                  <!--You have a CHOICE of the next 3 items at this level-->
                  <creditCardAccount>
                     <!--You have a CHOICE of the next 2 items at this level-->
                     <tokenizedId>?</tokenizedId>
                     <creditCardDetails>
                        <number>?</number>
                        <expiryDate>?</expiryDate>
                        <type>?</type>
                        <name>?</name>
                        <cvv>?</cvv>
                        <address>
                           <line1>?</line1>
                           <!--Optional:-->
                           <line2>?</line2>
                           <city>?</city>
                           <state>?</state>
                           <zipcode>?</zipcode>
                           <!--Optional:-->
                           <country>?</country>
                        </address>
                        <!--Optional:-->
                        <orderSource>?</orderSource>
                     </creditCardDetails>
                  </creditCardAccount>
                  <debitCardAccount>
                     <number>?</number>
                     <type>?</type>
                     <pin>?</pin>
                  </debitCardAccount>
                  <giftCardAccount>
                     <number>?</number>
                     <pin>?</pin>
                  </giftCardAccount>
               </cardAccount>
               <paypalAccount>
                  <id>?</id>
               </paypalAccount>
            </account>
         </linkExternalAccountRequest>
      </sch:linkExternalAccount>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/linkExternalAccount"/></con:call></con:operation><con:operation isOneWay="false" action="" name="linkFile" bindingOperationName="linkFile" type="Request-Response" outputName="linkFileResponse" inputName="linkFile" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:linkFile>
         <linkFileRequest>
            <subscriberId>?</subscriberId>
            <clientId>
               <!--Optional:-->
               <bancBoxId>?</bancBoxId>
               <!--Optional:-->
               <subscriberReferenceId>?</subscriberReferenceId>
            </clientId>
            <!--Optional:-->
            <referenceId>?</referenceId>
            <file>
               <name>?</name>
               <fileClass>?</fileClass>
               <!--Optional:-->
               <url>?</url>
               <content>cid:1194993723919</content>
               <!--Optional:-->
               <comment>?</comment>
            </file>
         </linkFileRequest>
      </sch:linkFile>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/linkFile"/></con:call></con:operation><con:operation isOneWay="false" action="" name="linkPayee" bindingOperationName="linkPayee" type="Request-Response" outputName="linkPayeeResponse" inputName="linkPayee" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:linkPayee>
         <linkPayeeRequest>
            <subscriberId>?</subscriberId>
            <clientId>
               <!--Optional:-->
               <bancBoxId>?</bancBoxId>
               <!--Optional:-->
               <subscriberReferenceId>?</subscriberReferenceId>
            </clientId>
            <!--Optional:-->
            <referenceId>?</referenceId>
            <payee>
               <payeeAccountNumber>?</payeeAccountNumber>
               <!--Optional:-->
               <memo>?</memo>
               <payee>
                  <!--You have a CHOICE of the next 4 items at this level-->
                  <ach>
                     <routingNumber>?</routingNumber>
                     <accountNumber>?</accountNumber>
                     <holderName>?</holderName>
                     <bankAccountType>?</bankAccountType>
                  </ach>
                  <paypal>
                     <id>?</id>
                  </paypal>
                  <check>
                     <name>?</name>
                     <address>
                        <line1>?</line1>
                        <!--Optional:-->
                        <line2>?</line2>
                        <city>?</city>
                        <state>?</state>
                        <zipcode>?</zipcode>
                     </address>
                  </check>
                  <bancbox>
                     <bancboxPayeeId>?</bancboxPayeeId>
                  </bancbox>
               </payee>
            </payee>
         </linkPayeeRequest>
      </sch:linkPayee>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/linkPayee"/></con:call></con:operation><con:operation isOneWay="false" action="" name="openAccount" bindingOperationName="openAccount" type="Request-Response" outputName="openAccountResponse" inputName="openAccount" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:openAccount>
         <openAccountRequest>
            <subscriberId>?</subscriberId>
            <clientId>
               <!--Optional:-->
               <bancBoxId>?</bancBoxId>
               <!--Optional:-->
               <subscriberReferenceId>?</subscriberReferenceId>
            </clientId>
            <!--Optional:-->
            <referenceId>?</referenceId>
            <!--Optional:-->
            <title>?</title>
            <!--Optional:-->
            <accountType>?</accountType>
            <!--Optional:-->
            <routable>
               <!--Optional:-->
               <credits>?</credits>
               <!--Optional:-->
               <debits>?</debits>
            </routable>
            <!--Optional:-->
            <subscriberAccountNumber>?</subscriberAccountNumber>
         </openAccountRequest>
      </sch:openAccount>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/openAccount"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="returnFund" bindingOperationName="returnFund" type="Request-Response" outputName="returnFundResponse" inputName="returnFund" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:returnFund>
         <returnFund>
            <subscriberId>?</subscriberId>
            <scheduleId>
               <!--Optional:-->
               <bancBoxId>?</bancBoxId>
               <!--Optional:-->
               <subscriberReferenceId>?</subscriberReferenceId>
            </scheduleId>
            <!--Optional:-->
            <reasonForRefund>?</reasonForRefund>
         </returnFund>
      </sch:returnFund>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/returnFund"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Copy of Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header>
      <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
            <wsse:Username>RICHA</wsse:Username>
            <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">abcd1234</wsse:Password>
         </wsse:UsernameToken>
      </wsse:Security>
   </soapenv:Header>
   <soapenv:Body>
      <sch:returnFund>
         <returnFund>
            <subscriberId>200255</subscriberId>
            <scheduleId>
               <!--Optional:-->
             <bancBoxId>630374</bancBoxId> 
               <!--Optional:-->
            
            </scheduleId>
            <!--Optional:-->
       
         </returnFund>
      </sch:returnFund>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/returnFund"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="searchBancBoxPayees" bindingOperationName="searchBancBoxPayees" type="Request-Response" outputName="searchBancBoxPayeesResponse" inputName="searchBancBoxPayees" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:searchBancBoxPayees>
         <searchBancBoxPayeesRequest>
            <!--Optional:-->
            <payeeName>?</payeeName>
            <!--Optional:-->
            <accountNumber>?</accountNumber>
            <!--Optional:-->
            <billerClass>?</billerClass>
            <!--Optional:-->
            <billerType>?</billerType>
            <!--Optional:-->
            <ascending>false</ascending>
            <!--Optional:-->
            <pageNo>?</pageNo>
            <!--Optional:-->
            <resultsPerPage>?</resultsPerPage>
         </searchBancBoxPayeesRequest>
      </sch:searchBancBoxPayees>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/searchBancBoxPayees"/></con:call></con:operation><con:operation isOneWay="false" action="" name="searchClients" bindingOperationName="searchClients" type="Request-Response" outputName="searchClientsResponse" inputName="searchClients" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:searchClients>
         <searchClientRequest>
            <subscriberId>?</subscriberId>
            <!--Optional:-->
            <clientId>
               <!--Optional:-->
               <bancBoxId>?</bancBoxId>
               <!--Optional:-->
               <subscriberReferenceId>?</subscriberReferenceId>
            </clientId>
            <!--Optional:-->
            <createdOnFromDate>?</createdOnFromDate>
            <!--Optional:-->
            <createdOnToDate>?</createdOnToDate>
            <!--Optional:-->
            <modifiedOnFromDate>?</modifiedOnFromDate>
            <!--Optional:-->
            <modifiedOnToDate>?</modifiedOnToDate>
            <!--Optional:-->
            <clientStatus>?</clientStatus>
            <!--Optional:-->
            <cipStatus>?</cipStatus>
            <!--Optional:-->
            <ascending>false</ascending>
            <!--Optional:-->
            <pageNo>?</pageNo>
            <!--Optional:-->
            <resultsPerPage>?</resultsPerPage>
         </searchClientRequest>
      </sch:searchClients>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/searchClients"/></con:call></con:operation><con:operation isOneWay="false" action="" name="sendFunds" bindingOperationName="sendFunds" type="Request-Response" outputName="sendFundsResponse" inputName="sendFunds" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:sendFunds>
         <sendFundsRequest>
            <subscriberId>?</subscriberId>
            <method>
               <!--You have a CHOICE of the next 7 items at this level-->
               <book/>
               <ach/>
               <check>
                  <type>?</type>
               </check>
               <wire/>
               <billpay/>
               <paypal/>
               <creditcard/>
            </method>
            <sourceAccount>
               <!--Optional:-->
               <bancBoxId>?</bancBoxId>
               <!--Optional:-->
               <subscriberReferenceId>?</subscriberReferenceId>
            </sourceAccount>
            <destination>
               <!--You have a CHOICE of the next 6 items at this level-->
               <account>
                  <!--Optional:-->
                  <bancBoxId>?</bancBoxId>
                  <!--Optional:-->
                  <subscriberReferenceId>?</subscriberReferenceId>
               </account>
               <linkedPayeeId>
                  <!--Optional:-->
                  <bancBoxId>?</bancBoxId>
                  <!--Optional:-->
                  <subscriberReferenceId>?</subscriberReferenceId>
               </linkedPayeeId>
               <linkedExternalAccountId>
                  <!--Optional:-->
                  <bancBoxId>?</bancBoxId>
                  <!--Optional:-->
                  <subscriberReferenceId>?</subscriberReferenceId>
               </linkedExternalAccountId>
               <bancBoxPayeeId>?</bancBoxPayeeId>
               <newPayee>
                  <payeeAccountNumber>?</payeeAccountNumber>
                  <!--Optional:-->
                  <memo>?</memo>
                  <payee>
                     <!--You have a CHOICE of the next 3 items at this level-->
                     <ach>
                        <routingNumber>?</routingNumber>
                        <accountNumber>?</accountNumber>
                        <holderName>?</holderName>
                        <bankAccountType>?</bankAccountType>
                     </ach>
                     <paypal>
                        <id>?</id>
                     </paypal>
                     <check>
                        <name>?</name>
                        <address>
                           <line1>?</line1>
                           <!--Optional:-->
                           <line2>?</line2>
                           <city>?</city>
                           <state>?</state>
                           <zipcode>?</zipcode>
                        </address>
                     </check>
                  </payee>
               </newPayee>
               <newExternalAccount>
                  <account>
                     <!--You have a CHOICE of the next 3 items at this level-->
                     <bankAccount>
                        <routingNumber>?</routingNumber>
                        <accountNumber>?</accountNumber>
                        <holderName>?</holderName>
                        <bankAccountType>?</bankAccountType>
                     </bankAccount>
                     <paypalAccount>
                        <id>?</id>
                     </paypalAccount>
                     <creditCardAccount>
                        <number>?</number>
                        <expiryDate>?</expiryDate>
                        <type>?</type>
                        <name>?</name>
                        <cvv>?</cvv>
                        <address>
                           <line1>?</line1>
                           <!--Optional:-->
                           <line2>?</line2>
                           <city>?</city>
                           <state>?</state>
                           <zipcode>?</zipcode>
                           <!--Optional:-->
                           <country>?</country>
                        </address>
                        <!--Optional:-->
                        <orderSource>?</orderSource>
                     </creditCardAccount>
                  </account>
               </newExternalAccount>
            </destination>
            <!--Optional:-->
            <payeeAccountNumber>?</payeeAccountNumber>
            <!--Optional:-->
            <memo>?</memo>
            <!--1 or more repetitions:-->
            <items>
               <!--Optional:-->
               <referenceId>?</referenceId>
               <!--Optional:-->
               <memo>?</memo>
               <amount>?</amount>
               <!--Optional:-->
               <scheduled>
                  <scheduleDate>?</scheduleDate>
               </scheduled>
            </items>
         </sendFundsRequest>
      </sch:sendFunds>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/sendFunds"/></con:call></con:operation><con:operation isOneWay="false" action="" name="submitVerificationAnswers" bindingOperationName="submitVerificationAnswers" type="Request-Response" outputName="submitVerificationAnswersResponse" inputName="submitVerificationAnswers" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:submitVerificationAnswers>
         <submitVerificationAnswers>
            <subscriberId>?</subscriberId>
            <clientId>
               <!--Optional:-->
               <bancBoxId>?</bancBoxId>
               <!--Optional:-->
               <subscriberReferenceId>?</subscriberReferenceId>
            </clientId>
            <idNumber>?</idNumber>
            <!--Zero or more repetitions:-->
            <answers>
               <type>?</type>
               <answer>?</answer>
            </answers>
         </submitVerificationAnswers>
      </sch:submitVerificationAnswers>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/submitVerificationAnswers"/></con:call></con:operation><con:operation isOneWay="false" action="" name="transferFunds" bindingOperationName="transferFunds" type="Request-Response" outputName="transferFundsResponse" inputName="transferFunds" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:transferFunds>
         <transferFundsRequest>
            <subscriberId>?</subscriberId>
            <sourceAccount>
               <!--Optional:-->
               <bancBoxId>?</bancBoxId>
               <!--Optional:-->
               <subscriberReferenceId>?</subscriberReferenceId>
            </sourceAccount>
            <destinationAccount>
               <!--Optional:-->
               <bancBoxId>?</bancBoxId>
               <!--Optional:-->
               <subscriberReferenceId>?</subscriberReferenceId>
            </destinationAccount>
            <!--Optional:-->
            <memo>?</memo>
            <!--1 or more repetitions:-->
            <items>
               <!--Optional:-->
               <referenceId>?</referenceId>
               <!--Optional:-->
               <memo>?</memo>
               <amount>?</amount>
               <!--Optional:-->
               <scheduled>
                  <scheduleDate>?</scheduleDate>
               </scheduled>
            </items>
         </transferFundsRequest>
      </sch:transferFunds>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/transferFunds"/></con:call></con:operation><con:operation isOneWay="false" action="" name="updateAccount" bindingOperationName="updateAccount" type="Request-Response" outputName="updateAccountResponse" inputName="updateAccount" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:updateAccount>
         <updateAccountRequest>
            <subscriberId>?</subscriberId>
            <accountId>
               <!--Optional:-->
               <bancBoxId>?</bancBoxId>
               <!--Optional:-->
               <subscriberReferenceId>?</subscriberReferenceId>
            </accountId>
            <!--Optional:-->
            <title>?</title>
         </updateAccountRequest>
      </sch:updateAccount>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/updateAccount"/></con:call></con:operation><con:operation isOneWay="false" action="" name="updateClient" bindingOperationName="updateClient" type="Request-Response" outputName="updateClientResponse" inputName="updateClient" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:updateClient>
         <updateClientRequest>
            <subscriberId>?</subscriberId>
            <clientId>
               <!--Optional:-->
               <bancBoxId>?</bancBoxId>
               <!--Optional:-->
               <subscriberReferenceId>?</subscriberReferenceId>
            </clientId>
            <!--Optional:-->
            <merchantId>?</merchantId>
            <!--Optional:-->
            <firstName>?</firstName>
            <!--Optional:-->
            <lastName>?</lastName>
            <!--Optional:-->
            <middleInitial>?</middleInitial>
            <!--Optional:-->
            <ssn>?</ssn>
            <!--Optional:-->
            <dob>?</dob>
            <!--Optional:-->
            <address>
               <line1>?</line1>
               <!--Optional:-->
               <line2>?</line2>
               <city>?</city>
               <state>?</state>
               <zipcode>?</zipcode>
            </address>
            <!--Optional:-->
            <homePhone>?</homePhone>
            <!--Optional:-->
            <mobilePhone>?</mobilePhone>
            <!--Optional:-->
            <workPhone>?</workPhone>
            <!--Optional:-->
            <email>?</email>
            <!--Optional:-->
            <username>?</username>
         </updateClientRequest>
      </sch:updateClient>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/updateClient"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="updateClientStatus" bindingOperationName="updateClientStatus" type="Request-Response" outputName="updateClientStatusResponse" inputName="updateClientStatus" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:updateClientStatus>
         <updateClientStatusRequest>
            <subscriberId>?</subscriberId>
            <!--Optional:-->
            <clientId>
               <!--Optional:-->
               <bancBoxId>?</bancBoxId>
               <!--Optional:-->
               <subscriberReferenceId>?</subscriberReferenceId>
            </clientId>
            <clientStatus>?</clientStatus>
         </updateClientStatusRequest>
      </sch:updateClientStatus>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/updateClientStatus"/></con:call></con:operation><con:operation isOneWay="false" action="" name="updateLinkedExternalAccount" bindingOperationName="updateLinkedExternalAccount" type="Request-Response" outputName="updateLinkedExternalAccountResponse" inputName="updateLinkedExternalAccount" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:updateLinkedExternalAccount>
         <updateLinkedExternalAccountRequest>
            <subscriberId>?</subscriberId>
            <!--Optional:-->
            <linkedExternalAccountId>
               <!--Optional:-->
               <bancBoxId>?</bancBoxId>
               <!--Optional:-->
               <subscriberReferenceId>?</subscriberReferenceId>
            </linkedExternalAccountId>
            <account>
               <!--You have a CHOICE of the next 3 items at this level-->
               <bankAccount>
                  <!--Optional:-->
                  <routingNumber>?</routingNumber>
                  <!--Optional:-->
                  <accountNumber>?</accountNumber>
                  <!--Optional:-->
                  <holderName>?</holderName>
                  <!--Optional:-->
                  <bankAccountType>?</bankAccountType>
               </bankAccount>
               <cardAccount>
                  <!--You have a CHOICE of the next 3 items at this level-->
                  <creditCardAccount>
                     <!--Optional:-->
                     <number>?</number>
                     <!--Optional:-->
                     <expiryDate>?</expiryDate>
                     <!--Optional:-->
                     <type>?</type>
                     <!--Optional:-->
                     <name>?</name>
                     <!--Optional:-->
                     <cvv>?</cvv>
                     <!--Optional:-->
                     <address>
                        <line1>?</line1>
                        <!--Optional:-->
                        <line2>?</line2>
                        <city>?</city>
                        <state>?</state>
                        <zipcode>?</zipcode>
                        <!--Optional:-->
                        <country>?</country>
                     </address>
                     <!--Optional:-->
                     <orderSource>?</orderSource>
                  </creditCardAccount>
                  <debitCardAccount>
                     <!--Optional:-->
                     <number>?</number>
                     <!--Optional:-->
                     <type>?</type>
                     <!--Optional:-->
                     <pin>?</pin>
                  </debitCardAccount>
                  <giftCardAccount>
                     <!--Optional:-->
                     <number>?</number>
                     <!--Optional:-->
                     <pin>?</pin>
                  </giftCardAccount>
               </cardAccount>
               <paypalAccount>
                  <id>?</id>
               </paypalAccount>
            </account>
         </updateLinkedExternalAccountRequest>
      </sch:updateLinkedExternalAccount>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/updateLinkedExternalAccount"/></con:call></con:operation><con:operation isOneWay="false" action="" name="updateLinkedPayee" bindingOperationName="updateLinkedPayee" type="Request-Response" outputName="updateLinkedPayeeResponse" inputName="updateLinkedPayee" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:updateLinkedPayee>
         <updateLinkedPayeeRequest>
            <subscriberId>?</subscriberId>
            <linkedPayeeId>
               <!--Optional:-->
               <bancBoxId>?</bancBoxId>
               <!--Optional:-->
               <subscriberReferenceId>?</subscriberReferenceId>
            </linkedPayeeId>
            <!--Optional:-->
            <payeeAccountNumber>?</payeeAccountNumber>
            <!--Optional:-->
            <memo>?</memo>
            <payee>
               <!--You have a CHOICE of the next 4 items at this level-->
               <ach>
                  <routingNumber>?</routingNumber>
                  <accountNumber>?</accountNumber>
                  <holderName>?</holderName>
                  <bankAccountType>?</bankAccountType>
               </ach>
               <paypal>
                  <id>?</id>
               </paypal>
               <check>
                  <name>?</name>
                  <address>
                     <line1>?</line1>
                     <!--Optional:-->
                     <line2>?</line2>
                     <city>?</city>
                     <state>?</state>
                     <zipcode>?</zipcode>
                  </address>
               </check>
               <bancbox>
                  <bancboxPayeeId>?</bancboxPayeeId>
               </bancbox>
            </payee>
         </updateLinkedPayeeRequest>
      </sch:updateLinkedPayee>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/updateLinkedPayee"/></con:call></con:operation><con:operation isOneWay="false" action="" name="updateMerchant" bindingOperationName="updateMerchant" type="Request-Response" outputName="updateMerchantResponse" inputName="updateMerchantRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:updateMerchant>
         <updateMerchantRequest>
            <subscriberId>?</subscriberId>
            <merchantId>?</merchantId>
            <!--Optional:-->
            <address>
               <address1>?</address1>
               <!--Optional:-->
               <address2>?</address2>
               <city>?</city>
               <state>?</state>
               <zipcode>?</zipcode>
            </address>
            <!--Optional:-->
            <primaryContact>
               <firstName>?</firstName>
               <lastName>?</lastName>
               <phone>?</phone>
               <emailAddress>?</emailAddress>
            </primaryContact>
            <!--Optional:-->
            <bankBusinessAccount>
               <routingNumber>?</routingNumber>
               <accountNumber>?</accountNumber>
            </bankBusinessAccount>
            <!--Optional:-->
            <merchantDetails>
               <!--Optional:-->
               <maxTransactionAmount>?</maxTransactionAmount>
               <!--Optional:-->
               <customerServiceNumber>?</customerServiceNumber>
               <!--Optional:-->
               <amexId>?</amexId>
               <!--Optional:-->
               <discoverId>?</discoverId>
               <!--Optional:-->
               <softDescriptor>?</softDescriptor>
            </merchantDetails>
            <!--Optional:-->
            <setAsDefaultMerchantId>?</setAsDefaultMerchantId>
         </updateMerchantRequest>
      </sch:updateMerchant>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/updateMerchantRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="updateMerchantStatus" bindingOperationName="updateMerchantStatus" type="Request-Response" outputName="updateMerchantStatusResponse" inputName="updateMerchantStatusRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:updateMerchantStatus>
         <updateMerchantStatusRequest>
            <subscriberId>?</subscriberId>
            <merchantId>?</merchantId>
            <merchantStatus>?</merchantStatus>
         </updateMerchantStatusRequest>
      </sch:updateMerchantStatus>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/updateMerchantStatusRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="updateSchedule" bindingOperationName="updateSchedule" type="Request-Response" outputName="updateScheduleResponse" inputName="updateScheduleRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:updateSchedule>
         <updateScheduleRequest>
            <subscriberId>?</subscriberId>
            <activity>
               <!--Optional:-->
               <bancBoxId>?</bancBoxId>
               <!--Optional:-->
               <subscriberReferenceId>?</subscriberReferenceId>
            </activity>
            <rescheduleDate>?</rescheduleDate>
         </updateScheduleRequest>
      </sch:updateSchedule>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/updateScheduleRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="verifyClient" bindingOperationName="verifyClient" type="Request-Response" outputName="verifyClientResponse" inputName="verifyClient" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:verifyClient>
         <verifyClient>
            <subscriberId>?</subscriberId>
            <!--Optional:-->
            <clientId>
               <!--Optional:-->
               <bancBoxId>?</bancBoxId>
               <!--Optional:-->
               <subscriberReferenceId>?</subscriberReferenceId>
            </clientId>
            <!--Optional:-->
            <generateQuestions>?</generateQuestions>
         </verifyClient>
      </sch:verifyClient>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/verifyClient"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Copy of Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header>
      <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
            <wsse:Username>RICHA</wsse:Username>
            <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
         </wsse:UsernameToken>
      </wsse:Security>
   </soapenv:Header>
   <soapenv:Body>
      <sch:verifyClient>
         <verifyClient>
            <subscriberId>200255</subscriberId>
            <!--Optional:-->
            <clientId>
               <!--Optional:-->
               <bancBoxId>145037</bancBoxId>
               <!--Optional:-->
                       </clientId>
            <!--Optional:-->
         </verifyClient>
      </sch:verifyClient>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/verifyClient"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="verifyCreditCard" bindingOperationName="verifyCreditCard" type="Request-Response" outputName="verifyCreditCardResponse" inputName="verifyCreditCard" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:verifyCreditCard>
         <verifyCreditCard>
            <amount>?</amount>
            <orderId>?</orderId>
            <orderSource>?</orderSource>
            <billToAddress>
               <!--Optional:-->
               <name>?</name>
               <!--Optional:-->
               <firstName>?</firstName>
               <!--Optional:-->
               <middleInitial>?</middleInitial>
               <!--Optional:-->
               <lastName>?</lastName>
               <!--Optional:-->
               <companyName>?</companyName>
               <addressLine1>?</addressLine1>
               <!--Optional:-->
               <addressLine2>?</addressLine2>
               <!--Optional:-->
               <addressLine3>?</addressLine3>
               <city>?</city>
               <state>?</state>
               <zipcode>?</zipcode>
               <country>?</country>
               <!--Optional:-->
               <email>?</email>
               <!--Optional:-->
               <phone>?</phone>
            </billToAddress>
            <ccDetails>
               <!--You have a CHOICE of the next 2 items at this level-->
               <tokenId>?</tokenId>
               <cardDetails>
                  <cardType>?</cardType>
                  <cardNumber>?</cardNumber>
                  <expDate>?</expDate>
                  <!--Optional:-->
                  <cardValidationNum>?</cardValidationNum>
               </cardDetails>
            </ccDetails>
            <!--Optional:-->
            <authenticationValue>?</authenticationValue>
         </verifyCreditCard>
      </sch:verifyCreditCard>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/verifyCreditCard"/></con:call></con:operation><con:operation isOneWay="false" action="" name="verifyClientManually" bindingOperationName="verifyClientManually" type="Request-Response" outputName="verifyClientManuallyResponse" inputName="verifyClientManually" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:verifyClientManually>
         <verifyClientManually>
            <subscriberId>?</subscriberId>
            <clientId>
               <!--Optional:-->
               <bancBoxId>?</bancBoxId>
               <!--Optional:-->
               <subscriberReferenceId>?</subscriberReferenceId>
            </clientId>
            <status>
               <!--Optional:-->
               <newCipStatus>?</newCipStatus>
               <!--Optional:-->
               <newOfacStatus>?</newOfacStatus>
            </status>
         </verifyClientManually>
      </sch:verifyClientManually>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/verifyClientManually"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:testSuite name="createClientAPITestSuite"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="createClientAPITestCase" searchProperties="true" id="e0fa3ebb-3c80-4ac8-abc1-211674165e4a"><con:settings/><con:testStep type="request" name="createClient" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BBXServiceSoapBinding</con:interface><con:operation>createClient</con:operation><con:request name="createClient"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header>
      <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
            <wsse:Username>${#Project#global_username}</wsse:Username>
            <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
         </wsse:UsernameToken>
      </wsse:Security>
   </soapenv:Header>
   <soapenv:Body>
      <sch:createClient>
         <createClientRequest>
            <subscriberId>${#TestCase#subscriberId}</subscriberId>
            <!--Optional:-->
            <referenceId>${#TestCase#referenceId}</referenceId>
            <!--Optional:-->
            <firstName>${#TestCase#firstName}</firstName>
            <!--Optional:-->
            <lastName>${#TestCase#lastName}</lastName>
            <middleInitial>${#TestCase#middleInitial}</middleInitial>
            <!--Optional:-->
            <!--Optional:-->
            <ssn>${#TestCase#ssn}</ssn>
            <!--Optional:-->
           <dob>${#TestCase#dob}</dob>
            <!--Optional:-->
            <address>
               <!--Optional:-->
               <line1>${#TestCase#address_line1}</line1>
               <!--Optional:-->
               <line2>${#TestCase#address_line2}</line2>
               <!--Optional:-->
               <city>${#TestCase#city}</city>
               <!--Optional:-->
               <state>${#TestCase#state}</state>
               <!--Optional:-->
               <zipcode>${#TestCase#zipcode}</zipcode>
            </address>
            <!--Optional:-->
            <homePhone>${#TestCase#homePhone}</homePhone>
            <!--Optional:-->
            <mobilePhone>${#TestCase#mobilePhone}</mobilePhone>
            <!--Optional:-->
            <workPhone>${#TestCase#workPhone}</workPhone>
            <!--Optional:-->
            <email>${#TestCase#email}</email>   
            <!--Optional:-->
            <username>${#TestCase#username}</username>
            <!--Optional:-->
            <merchantId>${#TestCase#merchantId}</merchantId>
         </createClientRequest>
      </sch:createClient>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="schema.bancbox.com/BBX/createClient" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="openAccount" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BBXServiceSoapBinding</con:interface><con:operation>openAccount</con:operation><con:request name="openAccount" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
<soapenv:Header>
      <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
            <wsse:Username>${#Project#global_username}</wsse:Username>
            <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
         </wsse:UsernameToken>
      </wsse:Security>
   </soapenv:Header>
   <soapenv:Body>
      <sch:openAccount>
         <openAccountRequest>
             <subscriberId>${#TestCase#subscriberId}</subscriberId>
            <clientId>
               <!--Optional:-->
               <bancBoxId>${#TestCase#bancBoxId}</bancBoxId>
               <!--Optional:-->
               <subscriberReferenceId>${#TestCase#subscriberReferenceId}</subscriberReferenceId>
            </clientId>
            <!--Optional:-->
            <referenceId>${#TestCase#accountReferenceId}</referenceId>
            <!--Optional:-->
            <title>${#TestCase#title}</title>
            <!--Optional:-->
            <accountType>${#TestCase#accountType}</accountType>
            <!--Optional:-->
            <routable>
               <!--Optional:-->
               <credits>${#TestCase#credits}</credits>
               <!--Optional:-->
               <debits>${#TestCase#debits}</debits>
            </routable>
            <!--Optional:-->
      <!--   <subscriberAccountNumber>${#TestCase#subscriberAccountNumber}</subscriberAccountNumber> -->
         </openAccountRequest>
      </sch:openAccount>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/openAccount"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="cancelClient" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BBXServiceSoapBinding</con:interface><con:operation>cancelClient</con:operation><con:request name="cancelClient" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header>
      <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
            <wsse:Username>${#Project#global_username}</wsse:Username>
            <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
         </wsse:UsernameToken>
      </wsse:Security>
   </soapenv:Header>
   <soapenv:Body>
      <sch:cancelClient>
         <cancelClientRequest>
             <subscriberId>${#TestCase#subscriberId}</subscriberId>
            <clientId>
               <!--Optional:-->
               <bancBoxId>${#TestCase#bancBoxId}</bancBoxId>
               <!--Optional:-->
               <subscriberReferenceId>${#TestCase#subscriberReferenceId}</subscriberReferenceId>
            </clientId>
            <!--Optional:-->
            <comment>${#TestCase#comment}</comment>
         </cancelClientRequest>
      </sch:cancelClient>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/cancelClient"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="closeAccount"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BBXServiceSoapBinding</con:interface><con:operation>closeAccount</con:operation><con:request name="closeAccount" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header>
      <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
            <wsse:Username>${#Project#global_username}</wsse:Username>
            <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
         </wsse:UsernameToken>
      </wsse:Security>
   </soapenv:Header>
   <soapenv:Body>
      <sch:closeAccount>
         <closeAccountRequest>
          <subscriberId>${#TestCase#subscriberId}</subscriberId>
            <accountId>
               <!--Optional:-->
               <bancBoxId>${#TestCase#subscriberId}</bancBoxId>
               <!--Optional:-->
               <subscriberReferenceId>${#TestCase#subscriberId}</subscriberReferenceId>
            </accountId>
            <!--Optional:-->
            <withdrawalMethod>${#TestCase#subscriberId}</withdrawalMethod>
            <!--Optional:-->
            <checkMethodType>?</checkMethodType>
            <!--Optional:-->
            <withdrawalAccount>
               <!--You have a CHOICE of the next 3 items at this level-->
               
               
               <checkAddress>
                  <name>?</name>
                  <address>
                     <line1>?</line1>
                     <!--Optional:-->
                     <line2>?</line2>
                     <city>?</city>
                     <state>?</state>
                     <zipcode>?</zipcode>
                  </address>
               </checkAddress>
            </withdrawalAccount>
         </closeAccountRequest>
      </sch:closeAccount>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/closeAccount"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getClient" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BBXServiceSoapBinding</con:interface><con:operation>getClient</con:operation><con:request name="getClient" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
  <soapenv:Header>
      <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
            <wsse:Username>${#Project#global_username}</wsse:Username>
            <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
         </wsse:UsernameToken>
      </wsse:Security>
   </soapenv:Header>
   <soapenv:Body>
      <sch:getClient>
         <getClientRequest>
              <subscriberId>${#TestCase#subscriberId}</subscriberId>
            <clientId>
               <!--Optional:-->
               <bancBoxId>${#TestCase#bancBoxId}</bancBoxId>
               <!--Optional:-->
            <subscriberReferenceId>${#TestCase#subscriberReferenceId}</subscriberReferenceId>
            </clientId>
         </getClientRequest>
      </sch:getClient>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/getClient"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="collectFees" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BBXServiceSoapBinding</con:interface><con:operation>collectFees</con:operation><con:request name="collectFees" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header>
      <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
            <wsse:Username>${#Project#global_username}</wsse:Username>
            <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
         </wsse:UsernameToken>
      </wsse:Security>
   </soapenv:Header>
   <soapenv:Body>
      <sch:collectFees>
         <collectFeesRequest>
       <subscriberId>${#TestCase#subscriberId}</subscriberId>
            <account>
               <!--Optional:-->
               <bancBoxId>${#TestCase#bancBoxId}</bancBoxId>
               <!--Optional:-->
               <subscriberReferenceId>${#TestCase#subscriberReferenceId}</subscriberReferenceId>
            </account>
            <!--1 or more repetitions:-->
            <items>
               <!--Optional:-->
               <referenceId>${#TestCase#referenceId}</referenceId>
               <amount>${#TestCase#amount}</amount>
               <!--Optional:-->
               <memo>${#TestCase#memo}</memo>
               <!--Optional:-->
               <scheduled>
                  <scheduleDate>${#TestCase#scheduleDate}</scheduleDate>
               </scheduled>
            </items>
         </collectFeesRequest>
      </sch:collectFees>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/collectFees"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="collectFunds_ACH" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BBXServiceSoapBinding</con:interface><con:operation>collectFunds</con:operation><con:request name="collectFunds_ACH" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
  <soapenv:Header>
     <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
           <wsse:Username>${#Project#global_username}</wsse:Username>
           <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
         </wsse:UsernameToken>
      </wsse:Security></soapenv:Header>
   <soapenv:Body>
      <sch:collectFunds>
         <collectFundsRequest>
            <subscriberId>${#TestCase#subscriberId}</subscriberId>
            <merchantId>${#TestCase#merchantId}</merchantId>
            <method>
               <!--You have a CHOICE of the next 3 items at this level-->
               <ach/>
            </method>
            <source>
               <!--You have a CHOICE of the next 3 items at this level-->
               <newExternalAccount>
                  <account>
                     <!--You have a CHOICE of the next 2 items at this level-->
                     <bankAccount>
                        <routingNumber>${#TestCase#routingNumber}</routingNumber>
               <accountNumber>${#TestCase#accountNumber}</accountNumber>
               <holderName>${#TestCase#holderName}</holderName>
               <bankAccountType>${#TestCase#bankAccountType}</bankAccountType>
                     </bankAccount>
                  </account>
               </newExternalAccount>
            </source>
            <destinationAccount>
               <bancBoxId>${#TestCase#bancBoxId}</bancBoxId>
            </destinationAccount>
            <!--1 or more repetitions:-->
            <items>
               <amount>${#TestCase#amount}</amount>
               <!--Optional:-->
               <memo>${#TestCase#memo}</memo>
            </items>
           
         </collectFundsRequest>
      </sch:collectFunds>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/collectFunds"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="cancelSchedules" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BBXServiceSoapBinding</con:interface><con:operation>cancelSchedules</con:operation><con:request name="cancelSchedules" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header>
      <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
            <wsse:Username>${#Project#global_username}</wsse:Username>
            <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
         </wsse:UsernameToken>
      </wsse:Security>
   </soapenv:Header>
   <soapenv:Body>
      <sch:cancelSchedules>
         <cancelSchedulesRequest>
               <subscriberId>${#TestCase#subscriberId}</subscriberId>
            <!--1 or more repetitions:-->
            <scheduleIds>
               <!--Optional:-->
               <bancBoxId>${#TestCase#bancBoxId}</bancBoxId>
               <!--Optional:-->
               <subscriberReferenceId>${#TestCase#subscriberReferenceId}</subscriberReferenceId>
            </scheduleIds>
         </cancelSchedulesRequest>
      </sch:cancelSchedules>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/cancelSchedules"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="collectFunds_BOOK" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BBXServiceSoapBinding</con:interface><con:operation>collectFunds</con:operation><con:request name="collectFunds_BOOK" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
  <soapenv:Header>
     <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
           <wsse:Username>merchnat2222</wsse:Username>
           <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">abcd1234</wsse:Password>
         </wsse:UsernameToken>
      </wsse:Security></soapenv:Header>
   <soapenv:Body>
      <sch:collectFunds>
         <collectFundsRequest>
            <subscriberId>200303</subscriberId>
            <method>
               <!--You have a CHOICE of the next 4 items at this level-->
               <book/>
            </method>
            <source>
               <!--You have a CHOICE of the next 3 items at this level-->
               <account>
                  <!--Optional:-->
                  <bancBoxId>530303100050</bancBoxId>
               </account>
            </source>
            <destinationAccount>
               <!--Optional:-->
               <bancBoxId>530303100049</bancBoxId>
            </destinationAccount>
            <!--1 or more repetitions:-->
            <items>
               <amount>10.00</amount>
            </items>
         </collectFundsRequest>
      </sch:collectFunds>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/collectFunds"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="verifyClient" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BBXServiceSoapBinding</con:interface><con:operation>verifyClient</con:operation><con:request name="verifyClient" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header>
      <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
            <wsse:Username>${#Project#global_username}</wsse:Username>
            <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
         </wsse:UsernameToken>
      </wsse:Security>
   </soapenv:Header>
   <soapenv:Body>
      <sch:verifyClient>
         <verifyClient>
              <subscriberId>${#TestCase#subscriberId}</subscriberId>
            <!--Optional:-->
            <clientId>
               <!--Optional:-->
               <bancBoxId>${#TestCase#bancBoxId}</bancBoxId>
               <!--Optional:-->
               <subscriberReferenceId>${#TestCase#subscriberReferenceId}</subscriberReferenceId>
            </clientId>
            <!--Optional:-->
            <generateQuestions>${#TestCase#generateQuestions}</generateQuestions>
         </verifyClient>
      </sch:verifyClient>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/verifyClient"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="collectFunds_CC" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BBXServiceSoapBinding</con:interface><con:operation>collectFunds</con:operation><con:request name="collectFunds_CC" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
  <soapenv:Header>
     <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
           <wsse:Username>PSP@bancbox.com</wsse:Username>
           <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">abcd1234</wsse:Password>
         </wsse:UsernameToken>
      </wsse:Security></soapenv:Header>
   <soapenv:Body>
      <sch:collectFunds>
         <collectFundsRequest>
            <subscriberId>200134</subscriberId>
            <!--Optional:-->
           <sessionId>7777666666667777</sessionId>
           <merchantId>466</merchantId>
           
            <method>
               <!--You have a CHOICE of the next 3 items at this level-->
               
               <creditcard/>
            </method>
            <source>
               <!--You have a CHOICE of the next 3 items at this level-->
              
               
               <newExternalAccount>
                  <account>
                     <!--You have a CHOICE of the next 2 items at this level-->
                     
                     <creditCardAccount>
                        <!--Optional:-->
                        
                        <!--You have a CHOICE of the next 3 items at this level-->
                      
                    
                     <creditCardDetails>
                        <number>4128123412899341231</number>
                        <expiryDate>01/17</expiryDate>
                        <type>VISA</type>
                        <name>JOHN SMITH</name>
                        <cvv>349</cvv>
                        <address>
                           <line1>1 Main St.</line1>
                           <!--Optional:-->
                           <line2>BM</line2>
                           <city>Burlington</city>
                           <state>MA</state>
                           <zipcode>01803-3747</zipcode>
                        </address>
                        </creditCardDetails>
                     
                     </creditCardAccount>
                  </account>
               </newExternalAccount>
            </source>
            <destinationAccount>
               <!--Optional:-->
               <bancBoxId>530134100007</bancBoxId>
               <!--Optional:-->
             
            </destinationAccount>
            <!--1 or more repetitions:-->
            <items>
               <!--Optional:-->
               <amount>3.1690</amount>
                <scheduled>
                  <scheduleDate>2013-07-02</scheduleDate>
               </scheduled>
            </items>
            <items>
               <!--Optional:-->
               <amount>200</amount>
                 <memo>ACH89898hju</memo>
            </items>



         </collectFundsRequest>
      </sch:collectFunds>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/collectFunds"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="DataType with Core Automation" disabled="true"><con:settings/><con:config><script><![CDATA[import jxl.*
import jxl.write.*
import com.eviware.soapui.*
import java.util.*

import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import groovy.json.JsonBuilder  


log.info "                         <<<<<<<<<<<<<<<  Starting Test Groovy 1  >>>>>>>>>>>>>>>"
def TestDataFile = context.expand( '${#Project#TestDataFile}' )
String APIName = context.expand( '${#Project#APIName}' )
int Length =  TestDataFile.lastIndexOf( '\\' )
String ResposeFileLocation = TestDataFile.substring(0,Length)
  //Getting Current Time
 currentTime = times = new Date().format("dd-MM-yyyy HH-mm-ss")
 log.info "   >>>>>>>> : time : "+currentTime
 //Getting location to create the TestResponseFile
 String TestResponseFile = ResposeFileLocation + "\\"+APIName+"-TestResponse-" +currentTime+".xls"
 log.info " >>>>>>>>>>>>>>  TestResponseFile "+TestResponseFile
 //Creating Response Excel File
 WritableWorkbook workbook = Workbook.createWorkbook(new File(TestResponseFile));
 WritableSheet sheet = workbook.createSheet("Response",0)
 log.info "    >>>>>>>>>>>>>>>>> TestResponseFile : "+TestResponseFile

  Label label00 = new Label(0, 0, "TCID"); //column=0=A,row=0=1
  sheet.addCell(label00);

  Label label01 = new Label(1, 0, "RESPONSE"); //column=0=A,row=0=1
  sheet.addCell(label01);
 //Get the Test Data Excel File
 Workbook TestDataWB = Workbook.getWorkbook(new File(TestDataFile));
Sheet TestDataProp1 = TestDataWB.getSheet("Request Schema")
Sheet TestDataValues1 = TestDataWB.getSheet("Request Values");
 Sheet TestDataResponseSchema = TestDataWB.getSheet("Response Schema")
 Sheet TestDataResponse = TestDataWB.getSheet("Response Values")
 PropRowCount = TestDataProp1.getRows()
 PropColCount = TestDataProp1.getColumns()
 ResponseSchemaRowCount = TestDataResponseSchema.getRows()
 ResponseSchemaColCount = TestDataResponseSchema.getColumns()
log.info " >>>>>>>>>>>>> Resonse Schema RowCount : "+ResponseSchemaRowCount
log.info " >>>>>>>>>>>>> Response Schema ColCount : "+ResponseSchemaColCount
//Count Rows and Columns in Response sheet
 ResponseRowCount = TestDataResponse.getRows()
 ResponseColCount = TestDataResponse.getColumns()
log.info " >>>>>>>>>>>>> Response RowCount : "+ResponseRowCount
 log.info " >>>>>>>>>>>>> Response ColCount : "+ResponseColCount

//Count Rows and Columns in Values sheet
 ValuesRowCount = TestDataValues1.getRows()
 ValuesColCount = TestDataValues1.getColumns()
 log.info "  >>>>>>>>>>>>>>>>>>>>.    ValuesRowCount " +ValuesRowCount
  log.info "  >>>>>>>>>>>>>>>>>>>>.    ValuesColCount " +ValuesColCount
 //This will display an information message
 def alert = com.eviware.soapui.support.UISupport;
 //alert.showInfoMessage("Hello World !");
 //alert.showInfoMessage("Hello World !","soapUI Warning !")
 log.info "    >>>>>>>>>>>> PropRowCount "+PropRowCount
 log.info "    >>>>>>>>>>>> ValuesColCount " +ValuesColCount
/*if(PropRowCount!=ValuesColCount)
{
 alert.showInfoMessage("Mismatch in the count of Properties and Values");
 return
}
*/


//********Iterating loop for No of Test Cases in Test Data Sheet*********//
for(iCountTestCase=1;iCountTestCase < ValuesRowCount;iCountTestCase++)
{//************START loop for No of Test Cases
int flagCount = 2
 
for(iCounter=1;iCounter<PropRowCount;iCounter++)
{
log.info"<<<<<<<property"+	TestDataProp1.getCell(0,iCounter).getContents()+">>>>>>>>>values"+TestDataValues1.getCell(iCounter,iCountTestCase).getContents()
 testRunner.testCase.setPropertyValue( TestDataProp1.getCell(0,iCounter).getContents(), TestDataValues1.getCell(iCounter,iCountTestCase).getContents())
}

testRunner.runTestStepByName(APIName)
log.info iCountTestCase
log.info "                         <<<<<<<<<<<<<<<  Starting Validate xml  Response for testcaseNo="+iCountTestCase;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
holder = groovyUtils.getXmlHolder( "${APIName}#Response")
def response = testRunner.testCase.getTestStepByName(APIName).getPropertyValue("response")
log.info ">>>>>>>>>>>response before parse>"+response;

Label label5 = new Label(1,iCountTestCase,response);
   sheet.addCell(label5);
for( iCounter1=1;iCounter1<ResponseColCount;iCounter1++)
{

  if(!(TestDataResponse.getCell(iCounter1,iCountTestCase).getContents().isEmpty()))
 {
String ResponseFromTestData = TestDataResponse.getCell(iCounter1,iCountTestCase).getContents();

String xpath1 = TestDataResponseSchema.getCell(3,iCounter1).getContents()
ActualResponseValue=holder.getNodeValue(xpath1);



log.info "param not null is>>"+ResponseFromTestData
log.info"counter1"+iCounter1
//getting xpath

log.info"xpath"+xpath1


//comparing actual response
if(!(ResponseFromTestData.equals(ActualResponseValue)))
{

Label label2 = new Label(flagCount, iCountTestCase, "response mismatch"+xpath1+"");
   sheet.addCell(label2);
   flagCount = flagCount+1
	
log.info"TC_0.  "+iCountTestCase+" response mismatch>>>>>   "+xpath1+">>>>    is "+ ActualResponseValue
}

}  //for outer if

} //for  response columns for loop




for( iCounter1=1;iCounter1<ResponseColCount;iCounter1++)
{

  if(!(TestDataResponse.getCell(iCounter1,iCountTestCase).getContents().isEmpty()))
 {
String ResponseFromTestData = TestDataResponse.getCell(iCounter1,iCountTestCase).getContents();

String xpath1 = TestDataResponseSchema.getCell(3,iCounter1).getContents()
ActualResponseValue=holder.getNodeValue(xpath1);
	
	//checking for datatype assertion :


String TYPE= TestDataResponseSchema.getCell(2,iCounter1).getContents()
log.info"type="+ TYPE;

try
{
log.info"TYPE"+TYPE
if(TYPE.equalsIgnoreCase(Integer))
typeError=Integer.valueOf(ActualResponseValue)	
else if(TYPE.equalsIgnoreCase(String))
typeError=String.valueOf(ActualResponseValue)
else if(TYPE.equalsIgnoreCase(Long))
typeError=Long.valueOf(ActualResponseValue)	
else
typeError="Datatype should be either Int,String,Long in Response Schema Excel"
}

catch(all)
{    

	
	typeErrorMsg="Data type mismatch in response"+all;

	Label label6 = new Label(flagCount,iCountTestCase,typeErrorMsg);
   sheet.addCell(label6);
    flagCount = flagCount+1
   
}

//checking DataType done
	
}

}





if(flagCount==2)
{
	 //Creating Writable font to be used in the response sheet
 WritableFont normalFont = new WritableFont(WritableFont.ARIAL);
 //creating plain format to write data in excel sheet
     WritableCellFormat normalFormat = new WritableCellFormat(normalFont);
 
 normalFormat.setBackground(jxl.format.Colour.GREEN);
 log.info  "          >>>>>else loop - flagCount "+flagCount
 Label label02 = new Label(0, iCountTestCase, TestDataValues1.getCell(0,iCountTestCase).getContents(),normalFormat); //column=0=A,row=0=1
 sheet.addCell(label02);
}
else
{
	 //Creating Writable font to be used in the response sheet
 WritableFont normalFont = new WritableFont(WritableFont.ARIAL);
 //creating plain format to write data in excel sheet
     WritableCellFormat normalFormat = new WritableCellFormat(normalFont);
 
 normalFormat.setBackground(jxl.format.Colour.RED);
 log.info  "          >>>>>else loop - flagCount "+flagCount
 Label label02 = new Label(0, iCountTestCase, TestDataValues1.getCell(0,iCountTestCase).getContents(),normalFormat); //column=0=A,row=0=1
 sheet.addCell(label02);
}

} // end of testcases loop
log.info "                         <<<<<<<<<<<<<<<  End of Validating xml  Response >>>>>>>>>>>>>>>"

workbook.write()
workbook.close()
]]></script></con:config></con:testStep><con:testStep type="request" name="collectFunds" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BBXServiceSoapBinding</con:interface><con:operation>collectFunds</con:operation><con:request name="collectFunds" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://qa-api.bancbox.com:9090/v3/BBXPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="schema.bancbox.com">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:collectFunds>
         <collectFundsRequest>
            <subscriberId>${#TestCase#referenceId}</subscriberId>
            <!--Optional:-->
            <sessionId>${#TestCase#sessionId}</sessionId>
            <!--Optional:-->
            <merchantId>${#TestCase#merchantId}</merchantId>
            <method>
               <!--You have a CHOICE of the next 3 items at this level-->
               <book/>
               <ach/>
               <creditcard/>
            </method>
            <source>
               <!--You have a CHOICE of the next 3 items at this level-->
               
               <linkedExternalAccountId>
                  <!--Optional:-->
                  <bancBoxId>${#TestCase#bancBoxId}</bancBoxId>
                  <!--Optional:-->
                  <subscriberReferenceId>${#TestCase#subscriberReferenceId}</subscriberReferenceId>
               </linkedExternalAccountId>
               
            </source>
            <destinationAccount>
               <!--You have a CHOICE of the next 2 items at this level-->
               
               <subscriberNamedAccount>${#TestCase#subscriberNamedAccount}</subscriberNamedAccount>
            </destinationAccount>
            <!--1 or more repetitions:-->
            <items>
               <!--Optional:-->
               <referenceId>${#TestCase#referenceId}</referenceId>
               <amount>${#TestCase#amount}</amount>
               <!--Optional:-->
               <memo>${#TestCase#memo}</memo>
               <!--Optional:-->
               <scheduled>
                  <scheduleDate>${#TestCase#scheduleDate}</scheduleDate>
               </scheduled>
            </items>
         </collectFundsRequest>
      </sch:collectFunds>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="schema.bancbox.com/BBX/collectFunds"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="AutomationScript"><con:settings/><con:config><script><![CDATA[import jxl.*
import jxl.write.*
import com.eviware.soapui.*
import java.util.*

import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import groovy.json.JsonBuilder  


log.info "                         <<<<<<<<<<<<<<<  Starting Test Groovy 1  >>>>>>>>>>>>>>>"
def TestDataFile = context.expand( '${#Project#TestDataFile}' )
String APIName = context.expand( '${#Project#APIName}' )
int Length =  TestDataFile.lastIndexOf( '\\' )
 
String ResposeFileLocation = TestDataFile.substring(0,Length)
  //Getting Current Time
      currentTime = times = new Date().format("dd-MM-yyyy HH-mm-ss")
  log.info "   >>>>>>>> : time : "+currentTime

 //Getting location to create the TestResponseFile
 String TestResponseFile = ResposeFileLocation + "\\"+APIName+"-TestResponse-" +currentTime+".xls"
 log.info " >>>>>>>>>>>>>>  TestResponseFile "+TestResponseFile
 //Creating Response Excel File
 WritableWorkbook workbook = Workbook.createWorkbook(new File(TestResponseFile));
 WritableSheet sheet = workbook.createSheet("Response",0)
 log.info "    >>>>>>>>>>>>>>>>> TestResponseFile : "+TestResponseFile

  Label label00 = new Label(0, 0, "TCID"); //column=0=A,row=0=1
  sheet.addCell(label00);

  Label label01 = new Label(1, 0, "RESPONSE"); //column=0=A,row=0=1
  sheet.addCell(label01);
 //Get the Test Data Excel File
 Workbook TestDataWB = Workbook.getWorkbook(new File(TestDataFile));

 Sheet TestDataProp1 = TestDataWB.getSheet("Request Schema")

 Sheet TestDataValues1 = TestDataWB.getSheet("Request Values");
 Sheet TestDataResponseSchema = TestDataWB.getSheet("Response Schema")
 Sheet TestDataResponse = TestDataWB.getSheet("Response Values")
 PropRowCount = TestDataProp1.getRows()
 PropColCount = TestDataProp1.getColumns()
 ResponseSchemaRowCount = TestDataResponseSchema.getRows()
 ResponseSchemaColCount = TestDataResponseSchema.getColumns()
log.info " >>>>>>>>>>>>> Resonse Schema RowCount : "+ResponseSchemaRowCount
log.info " >>>>>>>>>>>>> Response Schema ColCount : "+ResponseSchemaColCount
//Count Rows and Columns in Response sheet
 ResponseRowCount = TestDataResponse.getRows()
 ResponseColCount = TestDataResponse.getColumns()
log.info " >>>>>>>>>>>>> Response RowCount : "+ResponseRowCount
 log.info " >>>>>>>>>>>>> Response ColCount : "+ResponseColCount

//Count Rows and Columns in Values sheet
 ValuesRowCount = TestDataValues1.getRows()
 ValuesColCount = TestDataValues1.getColumns()
 log.info "  >>>>>>>>>>>>>>>>>>>>.    ValuesRowCount " +ValuesRowCount
 //This will display an information message
 def alert = com.eviware.soapui.support.UISupport;
 //alert.showInfoMessage("Hello World !");
 //alert.showInfoMessage("Hello World !","soapUI Warning !")
 log.info "    >>>>>>>>>>>> PropRowCount "+PropRowCount
 log.info "    >>>>>>>>>>>> ValuesColCount " +ValuesColCount
if(PropRowCount != ValuesColCount)
{
 alert.showInfoMessage("Mismatch in the count of Properties and Values");
 return
}




//********Iterating loop for No of Test Cases in Test Data Sheet*********//
for(iCountTestCase=1;iCountTestCase < ValuesRowCount;iCountTestCase++)
{//************START loop for No of Test Cases
int flagCount = 2
 //Label label02 = new Label(0, iCountTestCase, TestDataValues1.getCell(0,iCountTestCase).getContents()); //column=0=A,row=0=1
 //sheet.addCell(label02);


	
for(iCounter=1;iCounter<PropRowCount;iCounter++)
{
log.info"<<<<<<<property"+	TestDataProp1.getCell(0,iCounter).getContents()+">>>>>>>>>values"+TestDataValues1.getCell(iCounter,iCountTestCase).getContents()
 testRunner.testCase.setPropertyValue( TestDataProp1.getCell(0,iCounter).getContents(), TestDataValues1.getCell(iCounter,iCountTestCase).getContents())
}

testRunner.runTestStepByName(APIName)
log.info iCountTestCase
log.info "                         <<<<<<<<<<<<<<<  Starting Validate xml  Response for testcaseNo="+iCountTestCase+ValuesRowCount;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
 holder = groovyUtils.getXmlHolder( "${APIName}#Response" )
def response = testRunner.testCase.getTestStepByName(APIName).getPropertyValue("response")
log.info ">>>>>>>>>>>response before parse>"+response

Label label5 = new Label(1,iCountTestCase,response);
   sheet.addCell(label5);
for( iCounter1=1;iCounter1<ResponseColCount;iCounter1++)
{

  if(!(TestDataResponse.getCell(iCounter1,iCountTestCase).getContents().isEmpty()))
 {
String ResponseFromTestData = TestDataResponse.getCell(iCounter1,iCountTestCase).getContents();
log.info "param not null is>>"+ResponseFromTestData
log.info"counter1"+iCounter1

String xpath1 = TestDataResponseSchema.getCell(3,iCounter1).getContents()
log.info"xpath"+xpath1
ActualResponseValue=holder.getNodeValue(xpath1);
log.info("AcualResponse datatype"+ActualResponseValue.getClass())

log.info("EXcelResponse datatype"+ResponseFromTestData.getClass())

if(!(ResponseFromTestData.equals(ActualResponseValue)))
{

Label label2 = new Label(flagCount, iCountTestCase, "response mismatch"+xpath1+"");
   sheet.addCell(label2);
   flagCount = flagCount+1
	
log.info"TC_0.  "+iCountTestCase+" response mismatch>>>>>   "+xpath1+">>>>    is "+ ActualResponseValue
}

}
}

if(flagCount==2)
{
	 //Creating Writable font to be used in the response sheet
 WritableFont normalFont = new WritableFont(WritableFont.ARIAL);
 //creating plain format to write data in excel sheet
     WritableCellFormat normalFormat = new WritableCellFormat(normalFont);
 
 normalFormat.setBackground(jxl.format.Colour.GREEN);
 log.info  "          >>>>>else loop - flagCount "+flagCount
 Label label02 = new Label(0, iCountTestCase, TestDataValues1.getCell(0,iCountTestCase).getContents(),normalFormat); //column=0=A,row=0=1
 sheet.addCell(label02);
}
else{
	 //Creating Writable font to be used in the response sheet
 WritableFont normalFont = new WritableFont(WritableFont.ARIAL);
 //creating plain format to write data in excel sheet
     WritableCellFormat normalFormat = new WritableCellFormat(normalFont);
 
 normalFormat.setBackground(jxl.format.Colour.RED);
 log.info  "          >>>>>else loop - flagCount "+flagCount
 Label label02 = new Label(0, iCountTestCase, TestDataValues1.getCell(0,iCountTestCase).getContents(),normalFormat); //column=0=A,row=0=1
 sheet.addCell(label02);
}

}
log.info "                         <<<<<<<<<<<<<<<  End of Validating xml  Response >>>>>>>>>>>>>>>"

workbook.write()
workbook.close()
]]></script></con:config></con:testStep><con:testStep type="groovy" name="Copy of DataType without CORE Automation" disabled="true"><con:settings/><con:config><script><![CDATA[import jxl.*
import jxl.write.*
import com.eviware.soapui.*
import java.util.*

import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import groovy.json.JsonBuilder  


log.info "                         <<<<<<<<<<<<<<<  Starting Test Groovy 1  >>>>>>>>>>>>>>>"
def TestDataFile = context.expand( '${#Project#TestDataFile}' )
String APIName = context.expand( '${#Project#APIName}' )
int Length =  TestDataFile.lastIndexOf( '\\' )
 
String ResposeFileLocation = TestDataFile.substring(0,Length)
  //Getting Current Time
      currentTime = times = new Date().format("dd-MM-yyyy HH-mm-ss")
  log.info "   >>>>>>>> : time : "+currentTime

 //Getting location to create the TestResponseFile
 String TestResponseFile = ResposeFileLocation + "\\"+APIName+"-TestResponse-" +currentTime+".xls"
 log.info " >>>>>>>>>>>>>>  TestResponseFile "+TestResponseFile
 //Creating Response Excel File
 WritableWorkbook workbook = Workbook.createWorkbook(new File(TestResponseFile));
 WritableSheet sheet = workbook.createSheet("Response",0)
 log.info "    >>>>>>>>>>>>>>>>> TestResponseFile : "+TestResponseFile

  Label label00 = new Label(0, 0, "TCID"); //column=0=A,row=0=1
  sheet.addCell(label00);

  Label label01 = new Label(1, 0, "RESPONSE"); //column=0=A,row=0=1
  sheet.addCell(label01);
 //Get the Test Data Excel File
 Workbook TestDataWB = Workbook.getWorkbook(new File(TestDataFile));

 Sheet TestDataProp1 = TestDataWB.getSheet("Request Schema")

 Sheet TestDataValues1 = TestDataWB.getSheet("Request Values");
 Sheet TestDataResponseSchema = TestDataWB.getSheet("Response Schema")
 Sheet TestDataResponse = TestDataWB.getSheet("Response Values")
 PropRowCount = TestDataProp1.getRows()
 PropColCount = TestDataProp1.getColumns()
 ResponseSchemaRowCount = TestDataResponseSchema.getRows()
 ResponseSchemaColCount = TestDataResponseSchema.getColumns()
log.info " >>>>>>>>>>>>> Resonse Schema RowCount : "+ResponseSchemaRowCount
log.info " >>>>>>>>>>>>> Response Schema ColCount : "+ResponseSchemaColCount
//Count Rows and Columns in Response sheet
 ResponseRowCount = TestDataResponse.getRows()
 ResponseColCount = TestDataResponse.getColumns()
log.info " >>>>>>>>>>>>> Response RowCount : "+ResponseRowCount
 log.info " >>>>>>>>>>>>> Response ColCount : "+ResponseColCount

//Count Rows and Columns in Values sheet
 ValuesRowCount = TestDataValues1.getRows()
 ValuesColCount = TestDataValues1.getColumns()
 log.info "  >>>>>>>>>>>>>>>>>>>>.    ValuesRowCount " +ValuesRowCount
 //This will display an information message
 def alert = com.eviware.soapui.support.UISupport;
 //alert.showInfoMessage("Hello World !");
 //alert.showInfoMessage("Hello World !","soapUI Warning !")
 log.info "    >>>>>>>>>>>> PropRowCount "+PropRowCount
 log.info "    >>>>>>>>>>>> ValuesColCount " +ValuesColCount
if(PropRowCount != ValuesColCount)
{
 alert.showInfoMessage("Mismatch in the count of Properties and Values");
 return
}




//********Iterating loop for No of Test Cases in Test Data Sheet*********//
for(iCountTestCase=1;iCountTestCase < ValuesRowCount;iCountTestCase++)
{//************START loop for No of Test Cases
int flagCount = 2
 //Label label02 = new Label(0, iCountTestCase, TestDataValues1.getCell(0,iCountTestCase).getContents()); //column=0=A,row=0=1
 //sheet.addCell(label02);


	
for(iCounter=1;iCounter<PropRowCount;iCounter++)
{
log.info"<<<<<<<property"+	TestDataProp1.getCell(0,iCounter).getContents()+">>>>>>>>>values"+TestDataValues1.getCell(iCounter,iCountTestCase).getContents()
 testRunner.testCase.setPropertyValue( TestDataProp1.getCell(0,iCounter).getContents(), TestDataValues1.getCell(iCounter,iCountTestCase).getContents())
}

testRunner.runTestStepByName(APIName)
log.info iCountTestCase
log.info "                         <<<<<<<<<<<<<<<  Starting Validate xml  Response for testcaseNo="+iCountTestCase+ValuesRowCount;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
 holder = groovyUtils.getXmlHolder( "${APIName}#Response" )
def response = testRunner.testCase.getTestStepByName(APIName).getPropertyValue("response")
log.info ">>>>>>>>>>>response before parse>"+response

Label label5 = new Label(1,iCountTestCase,response);
   sheet.addCell(label5);
for( iCounter1=1;iCounter1<ResponseColCount;iCounter1++)
{

  if(!(TestDataResponse.getCell(iCounter1,iCountTestCase).getContents().isEmpty()))
 {
String ResponseFromTestData = TestDataResponse.getCell(iCounter1,iCountTestCase).getContents();
log.info "param not null is>>"+ResponseFromTestData
log.info"counter1"+iCounter1

String xpath1 = TestDataResponseSchema.getCell(3,iCounter1).getContents()
log.info"xpath"+xpath1
ActualResponseValue=holder.getNodeValue(xpath1);
log.info("AcualResponse datatype"+ActualResponseValue.getClass())

log.info("EXcelResponse datatype"+ResponseFromTestData.getClass())

if(!(ResponseFromTestData.equals(ActualResponseValue)))
{

Label label2 = new Label(flagCount, iCountTestCase, "response mismatch"+xpath1+"");
   sheet.addCell(label2);
   flagCount = flagCount+1
	
log.info"TC_0.  "+iCountTestCase+" response mismatch>>>>>   "+xpath1+">>>>    is "+ ActualResponseValue
}

}
}

if(flagCount==2)
{
	 //Creating Writable font to be used in the response sheet
 WritableFont normalFont = new WritableFont(WritableFont.ARIAL);
 //creating plain format to write data in excel sheet
     WritableCellFormat normalFormat = new WritableCellFormat(normalFont);
 
 normalFormat.setBackground(jxl.format.Colour.GREEN);
 log.info  "          >>>>>else loop - flagCount "+flagCount
 Label label02 = new Label(0, iCountTestCase, TestDataValues1.getCell(0,iCountTestCase).getContents(),normalFormat); //column=0=A,row=0=1
 sheet.addCell(label02);
}
else{
	 //Creating Writable font to be used in the response sheet
 WritableFont normalFont = new WritableFont(WritableFont.ARIAL);
 //creating plain format to write data in excel sheet
     WritableCellFormat normalFormat = new WritableCellFormat(normalFont);
 
 normalFormat.setBackground(jxl.format.Colour.RED);
 log.info  "          >>>>>else loop - flagCount "+flagCount
 Label label02 = new Label(0, iCountTestCase, TestDataValues1.getCell(0,iCountTestCase).getContents(),normalFormat); //column=0=A,row=0=1
 sheet.addCell(label02);
}

}
log.info "                         <<<<<<<<<<<<<<<  End of Validating xml  Response >>>>>>>>>>>>>>>"

workbook.write()
workbook.close()
]]></script></con:config></con:testStep><con:properties><con:property><con:name>subscriberId</con:name><con:value>200255</con:value></con:property><con:property><con:name>clientId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>bancBoxId</con:name><con:value>145678</con:value></con:property><con:property><con:name>subscriberReferenceId</con:name><con:value>12</con:value></con:property><con:property><con:name>generateQuestions</con:name><con:value>true</con:value></con:property><con:property><con:name>referenceId</con:name><con:value>RHello_3</con:value></con:property><con:property><con:name>firstName</con:name><con:value>Patricia</con:value></con:property><con:property><con:name>lastName</con:name><con:value>Joseph</con:value></con:property><con:property><con:name>middleInitial</con:name><con:value>m</con:value></con:property><con:property><con:name>ssn</con:name><con:value>123-23-1234</con:value></con:property><con:property><con:name>dob</con:name><con:value>1989-12-21</con:value></con:property><con:property><con:name>address_line1</con:name><con:value>P.O. Box 928, 4656 Aliquet Avenue</con:value></con:property><con:property><con:name>address_line2</con:name><con:value>1423 Dapibus Av.</con:value></con:property><con:property><con:name>city</con:name><con:value>Timaru</con:value></con:property><con:property><con:name>state</con:name><con:value>South Island</con:value></con:property><con:property><con:name>zipcode</con:name><con:value>81260-340</con:value></con:property><con:property><con:name>homePhone</con:name><con:value>(710) 397-7747</con:value></con:property><con:property><con:name>mobilePhone</con:name><con:value>(397) 107-6721</con:value></con:property><con:property><con:name>workPhone</con:name><con:value>(523) 452-7807</con:value></con:property><con:property><con:name>email</con:name><con:value>vitae@eratSednunc.edu</con:value></con:property><con:property><con:name>username</con:name><con:value>Uhello_3</con:value></con:property><con:property><con:name>title</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>routable</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>credits</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>debits</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>merchantId</con:name><con:value>720</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 2" searchProperties="true"><con:settings/><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:requirements/><con:properties><con:property><con:name>APIName</con:name><con:value>verifyClient</con:value></con:property><con:property><con:name>TestDataFile</con:name><con:value>C:\\Users\\richa\\Desktop\\TestDataForAutomation\\DataFiles\\verifyClient\verifyClient.xls</con:value></con:property><con:property><con:name>global_username</con:name><con:value>RICHA</con:value></con:property><con:property><con:name>global_password</con:name><con:value>abcd1234</con:value></con:property></con:properties><con:wssContainer/><con:databaseConnectionContainer/><con:reporting><con:xmlTemplates/><con:parameters/></con:reporting><con:sensitiveInformation/></con:soapui-project>